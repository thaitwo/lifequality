{"version":3,"sources":["components/SearchBox.js","constants/routes.js","components/TopNavigation.js","pages/AboutPage.js","components/UrbanAreasList.js","pages/HomePage.js","components/Summary.js","components/LifeQuality.js","constants/options/chartOptions.js","components/Salaries.js","helper/index.js","components/Climate.js","components/CostOfLiving.js","components/JobMarket.js","components/Education.js","components/Housing.js","components/Safety.js","components/Lgbt.js","components/People.js","pages/CityPage.js","App.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","city","suggestions","SearchBox","props","state","handleChange","bind","handleSubmit","e","this","setState","target","name","value","fetch","then","res","json","data","console","log","preventDefault","cityValue","apiUrl","find","matching_full_name","split","urbanAreaLink","slugName","history","push","process","slice","map","suggestion","index","key","onClick","handleSuggestionSelect","onSubmit","className","onChange","placeholder","renderSuggestions","React","Component","withRouter","TopNavigation","to","AboutPage","UrbanAreasList","urbanAreasList","area","href","renderUrbanAreas","HomePage","Summary","populationCount","populationContent","population","summary","parsedSummary","ReactHtmlParser","item","id","float_value","toLocaleString","UrbanAreaScores","categories","scores","chart","prevProps","options","title","text","undefined","renderTo","type","xAxis","category","lineWidth","yAxis","gridLineWidth","visible","plotOptions","series","pointPadding","borderRadius","parseInt","score_out_of_10","color","pointWidth","showInLegend","credits","enabled","Highcharts","style","chartStyles","height","width","inverted","accessibility","description","tooltip","valuePrefix","valueSuffix","columnrange","dataLabels","format","legend","more","UrbanAreaSalaries","jobTitles","salaries","salary","job","salaryPercentiles","Math","round","salary_percentiles","percentile_25","percentile_75","dataExists","dataArr","some","findData","toFahrenheit","celsius","HighchartsMore","HighchartsSolidGauge","Climate","climate","weatherTypeContent","avgRainyDaysContent","avgSunshineContent","avgDayLengthContent","avgHighTempContent","avgLowTempContent","hasWeatherType","hasAvgDayLength","hasAvgRainyDays","hasAvgSunshine","hasAvgHighTemp","hasAvgLowTemp","weatherType","label","string_value","avgDayLength","icon","faSun","String","avgSunshine","percent_value","avgRainyDays","faCloudRain","avgHighTemp","faTemperatureHigh","Number","avgLowTemp","faTemperatureLow","renderData","icons","faAppleAlt","faBreadSlice","faMugHot","faTicketAlt","faRunning","faBeer","faBusAlt","faHamburger","faTaxi","faUtensils","CostOfLiving","currency_dollar_value","toFixed","JobMarket","startupSalary","jobAvail","jobAvailContent","startupSalaryContent","int_value","Education","studentHappiness","pisaMathScore","pisaReadingScore","pisaScienceScore","bestUniversity","bestUniversityRanking","bestUniversityContent","parseFloat","Housing","largeAptRent","mediumAptRent","smallAptRent","faHome","Safety","gunDeathRate","gunOwnership","Lgbt","homosexualityRights","adoptionRights","discrimination","genderChangeRights","bloodDonation","marriageRights","People","people","language","elderlyPercent","elderlyPercentContent","lifeExpectancy","lifeExpectancyContent","medianAge","medianAgeContent","unemploymentRate","unemploymentRateContent","populationDensity","populationDensityContent","engProficiency","engProficiencyContent","spokenLanguage","spokenLanguageContent","hasElderlyPercent","hasLifeExpectancy","hasMedianAge","hasUnemploymentRate","hasEngProficiency","hasSpokenLanguage","hasPopulation","hasPopulationDensity","BASE_URL_URBAN_AREAS","CityPage","areaName","cityId","match","params","cityData","uaScores","uaSalaries","costOfLiving","jobMarket","education","housing","safety","lgbt","fetchData","prevState","Promise","all","r","basicData","scoresData","salariesData","detailsData","imagesData","details","imageUrl","photos","image","web","full_name","uaDetails","content","src","LifeQuality","Salaries","renderCityData","renderNotFound","nextProps","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.67b41b4d.chunk.js","sourcesContent":["/**\n* DEPENDENCIES\n*/\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\n\n/**\n* CONSTANTS\n*/\nimport * as ROUTES from '../constants/routes';\n\nconst INITIAL_STATE = {\n  city: '',\n  suggestions: []\n}\n\nclass SearchBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n\n    // BIND METHODS\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n\n    fetch(`https://api.teleport.org/api/cities/?search=${e.target.value}`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState({\n          suggestions: data['_embedded']['city:search-results']\n        });\n      })\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  handleSuggestionSelect(cityValue) {\n    const { suggestions } = this.state;\n    const selectedCity = suggestions.find(city => cityValue === city.matching_full_name);\n    const apiUrl = selectedCity['_links']['city:item']['href'];\n    const cityId = apiUrl.split('geonameid:')[1].split('/')[0];\n    fetch(apiUrl)\n      .then(res => res.json())\n      .then(res => {\n        let urbanAreaLink = res['_links']['city:urban_area'] ? res['_links']['city:urban_area']['href'] : null;\n        let slugName = urbanAreaLink ? urbanAreaLink.split('slug:')[1].split('/')[0] : 'notfound';\n\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(process.env.PUBLIC_URL + `${ROUTES.CITIES}/${slugName}`);\n      })\n  }\n\n  renderSuggestions() {\n    const { city, suggestions } = this.state;\n\n    if (suggestions && city !== '') {\n      return suggestions.slice(0,10).map((suggestion, index) => {\n        const city = suggestion.matching_full_name;\n        return <li key={index} onClick={() => this.handleSuggestionSelect(city)}>{city}</li>;\n      });\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          className=\"search-input\"\n          name=\"city\"\n          onChange={this.handleChange}\n          value={this.state.city}\n          placeholder=\"Search cities\"\n        />\n        <ul className=\"search-suggestions\">\n          {this.renderSuggestions()}\n        </ul>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(SearchBox);","/**\n* ROUTES\n*/\n\nexport const HOME =     '/';\nexport const ABOUT =    '/about';\nexport const CITIES =   '/cities';\n","/**\n* DEPENDENCIES\n*/\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n/**\n* CONSTANTS\n*/\nimport * as ROUTES from '../constants/routes';\nimport SearchBox from './SearchBox';\n\n\nconst TopNavigation = () => (\n  <div className=\"topnav-container\">\n    <div className=\"topnav-content\">\n      <Link to={process.env.PUBLIC_URL + ROUTES.HOME} className=\"topnav-logo\">\n        <h2>WorldLifeQuality</h2>\n      </Link>\n      <SearchBox />\n    </div>\n  </div>\n);\n\nexport default TopNavigation;","import React from 'react';\n\nconst AboutPage = () => (\n  <div>\n    <h2 className=\"text-header\">About</h2>\n    <p className=\"text-body\">Life Quality provides statistics, insights, and measurements of lifequality for popular cities around the world.</p>\n    <p className=\"text-body\">Enter a city name in the search box above to find out more about the city.</p>\n  </div>\n);\n\nexport default AboutPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport * as ROUTES from '../constants/routes';\n\nclass UrbanAreasList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      urbanAreasList: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.teleport.org/api/urban_areas/')\n      .then(res => res.json())\n      .then(res => {\n        // console.log(res);\n        const urbanAreasList = res['_links']['ua:item'];\n        const urbanAreasIds = res['_links']['ua:item']['href'];\n\n        this.setState({ urbanAreasList });\n        // console.log(urbanAreasList);\n        // return fetch(urb)\n      })\n      .then()\n  }\n\n  renderUrbanAreas() {\n    const { urbanAreasList } = this.state;\n    // console.log(urbanAreasList);\n\n    const urbanAreas = urbanAreasList.map((area, index) => {\n      const { href, name } = area;\n      const slugName = href.split('slug:')[1].split('/')[0];\n\n      return (\n        <li key={index}>\n          <Link to={process.env.PUBLIC_URL + `${ROUTES.CITIES}/${slugName}`}>{name}</Link>\n        </li>\n      );\n    });\n\n    return urbanAreas;\n  }\n\n  render() {\n    return (\n      <div>\n        <ul className=\"urban-areas-container\">\n          {this.renderUrbanAreas()}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default UrbanAreasList;","import React from 'react';\nimport UrbanAreasList from '../components/UrbanAreasList';\n\nconst HomePage = () => (\n  <div className=\"app-container\">\n    <h2 className=\"text-subheader\">Cities Around the World</h2>\n    <UrbanAreasList />\n  </div>\n);\n\nexport default HomePage;","/**\n * DEPENDENCIES\n */\nimport React from 'react';\nimport ReactHtmlParser from 'react-html-parser';\n\n\nconst Summary = ({ name, population, summary }) => {\n  const parsedSummary = summary ? ReactHtmlParser(summary) : '';\n  let populationCount;\n  let populationContent;\n\n  if (population) {\n    populationCount = population ? population.find(item => item.id === 'POPULATION-SIZE') : '';\n    populationCount = populationCount.float_value * 1000000000;\n    populationCount = populationCount.toLocaleString('en');\n\n    populationContent = (\n      <div className=\"summary-population\">\n        <h3>{populationCount}</h3>\n        <p className=\"text-subheader\">Population</p>\n      </div>\n    );\n  }\n    \n  return (\n    <div>\n      <p className=\"text-header\">{name}</p>\n\t\t\t<div className=\"summary-text\">{parsedSummary}</div>\n      <div className=\"summary-population\">\n        {populationContent}\n      </div>\n    </div>\n  );\n};\n\nexport default Summary;","import React from 'react';\nimport Highcharts from 'highcharts';\nimport ReactHtmlParser from 'react-html-parser';\n\nclass UrbanAreaScores extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      categories: [],\n      scores: [],\n    };\n\n    this.chart = null;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.scores !== this.props.scores) {\n      const categories = this.props.scores.map(category => category.name);\n      const scores = this.props.scores.map(category => parseInt(category.score_out_of_10));\n      \n      const options = {\n        title: {\n          text: undefined\n        },\n        chart: {\n          renderTo: 'uaScoresChart',\n          type: 'bar'\n        },\n        xAxis: {\n          categories: categories,\n          lineWidth: 0,\n        },\n        yAxis: {\n          title: {\n            text: null\n          },\n          gridLineWidth: 0,\n          visible: false\n        },\n        plotOptions: {\n          series: {\n            pointPadding: 0,\n          }\n        },\n        series: [\n          {\n            borderRadius: 4,\n            data: scores,\n            color: '#66BB6A',\n            pointWidth: 20,\n            showInLegend: false\n          }\n        ],\n        credits: {\n          enabled: false\n        }\n      };\n      this.chart = new Highcharts.chart(options);\n    }\n  }\n\n  renderSummary() {\n    const { summary } = this.props;\n    if (summary) {\n      return ReactHtmlParser(summary);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"text-header\">Life Quality</h2>\n        <div className=\"ua-scores-container\">\n          <div id=\"uaScoresChart\" style={chartStyles}></div>\n          <div></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst chartStyles = {\n  height: '600px',\n  width: '400px'\n};\n\nexport default UrbanAreaScores;","export const options = {\n  chart: {\n    renderTo: 'uaSalariesChart',\n    type: 'columnrange',\n    inverted: true\n  },\n  accessibility: {\n    description: 'A column range chart compares the monthly temperature variations throughout 2017 in Vik I Sogn, Norway. The chart is interactive and displays the temperature range for each month when hovering over the data. The temperature is measured in degrees Celsius on the X-axis and the months are plotted on the Y-axis. The lowest temperature is recorded in March at minus 10.2 Celsius. The lowest range of temperatures is found in December ranging from a low of minus 9 to a high of 8.6 Celsius. The highest temperature is found in July at 26.2 Celsius. July also has the highest range of temperatures from 6 to 26.2 Celsius. The broadest range of temperatures is found in May ranging from a low of minus 0.6 to a high of 23.1 Celsius.'\n  },\n  title: {\n    text: null\n  },\n  xAxis: {\n    categories: null\n  },\n  yAxis: {\n    title: {\n      text: null\n    }\n  },\n  tooltip: {\n    valuePrefix: '$',\n    valueSuffix: 'K'\n  },\n  plotOptions: {\n    columnrange: {\n      dataLabels: {\n        enabled: true,\n        format: '{y}K'\n      }\n    }\n  },\n  legend: {\n    enabled: false\n  },\n  series: [{\n    name: 'Salary',\n    data: null,\n    borderRadius: 4,\n    pointWidth: 18,\n  }],\n  credits: {\n    enabled: false\n  }\n}","import React from 'react';\nimport Highcharts from 'highcharts';\nimport more from 'highcharts/highcharts-more';\nimport { options } from '../constants/options/chartOptions';\nmore(Highcharts)\n\nclass UrbanAreaSalaries extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      jobTitles: null,\n    };\n\n    this.chart = null;\n\n    // this.handleOpenDropdown = this.handleOpenDropdown.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.salaries !== this.props.salaries) {\n      const jobTitles = this.props.salaries.map(salary => salary.job.title);\n      const salaryPercentiles = this.props.salaries.map(salary => {\n        const perc25 = Math.round(parseInt(salary.salary_percentiles.percentile_25) / 1000);\n        const perc75 = Math.round(parseInt(salary.salary_percentiles.percentile_75) / 1000);\n        return [perc25, perc75];\n      });\n\n      options.xAxis.categories = jobTitles;\n      options.series[0].data = salaryPercentiles;\n      // console.log(options.xAxis.categories)\n      \n      this.chart = new Highcharts.chart(options);\n    }\n  }\n\n\n\n  render() {\n    // const { jobTitles } = this.state;\n\n    return (\n      <div>\n        <h2 className=\"text-header\">Salaries</h2>\n        <p className=\"text-body\">Ranges are from 25th to 75th percentiles.</p>\n        <div id=\"uaSalariesChart\" style={chartStyles}></div>\n      </div>\n    );\n  }\n}\n\nconst chartStyles = {\n  height: '1200px',\n  width: '100%'\n};\n\nexport default UrbanAreaSalaries;","export const dataExists = (dataArr, id) => dataArr.some(item => item.id === id);\n\nexport const findData = (dataArr, id) => dataArr.find(category => category.id === id);\n\nexport const toFahrenheit = (celsius) => Math.round((celsius * (9/5)) + 32);","import React from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsMore from 'highcharts/highcharts-more';\nimport * as HighchartsSolidGauge from 'highcharts/modules/solid-gauge';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSun, faCloudRain, faTemperatureHigh, faTemperatureLow } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * HELPER\n */\nimport { dataExists, findData, toFahrenheit } from '../helper';\n\nHighchartsMore(Highcharts);\nHighchartsSolidGauge(Highcharts);\n\n\nconst Climate = ({ climate }) => {\n\n  const renderData = () => {\n    if (climate) {\n      let weatherTypeContent = '';\n      let avgRainyDaysContent = '';\n      let avgSunshineContent = '';\n      let avgDayLengthContent = '';\n      let avgHighTempContent = '';\n      let avgLowTempContent = '';\n\n      const hasWeatherType = dataExists(climate, 'WEATHER-TYPE');\n      const hasAvgDayLength = dataExists(climate, 'WEATHER-AV-DAY-LENGTH');\n      const hasAvgRainyDays = dataExists(climate, 'WEATHER-AV-NUMBER-RAINY-DAYS');\n      const hasAvgSunshine = dataExists(climate, 'WEATHER-AV-POSSIBILITY-SUNSHINE');\n      const hasAvgHighTemp = dataExists(climate, 'WEATHER-AVERAGE-HIGH');\n      const hasAvgLowTemp = dataExists(climate, 'WEATHER-AVERAGE-LOW');\n      \n      \n      if (hasWeatherType) {\n        const weatherType = findData(climate, 'WEATHER-TYPE');\n        weatherTypeContent = (\n          <div className=\"climate-weatherType\">\n            <p className=\"text-subheader\">{weatherType.label}</p>\n            <div>{weatherType.string_value}</div>\n          </div>\n        );\n      }\n      \n      if (hasAvgDayLength) {\n        const avgDayLength = findData(climate, 'WEATHER-AV-DAY-LENGTH');\n        avgDayLengthContent = (\n          <div>\n            <p className=\"text-subheader\">{avgDayLength.label}</p>\n            <div className=\"climate-iconData-wrapper\">\n              <FontAwesomeIcon className=\"icon-sun iconSize-medium\" icon={faSun} />\n              <div className=\"text-header\">{String(avgDayLength.float_value)}</div>\n            </div>\n          </div>\n        );\n      }\n\n      if (hasAvgSunshine) {\n        const avgSunshine = findData(climate, 'WEATHER-AV-POSSIBILITY-SUNSHINE');\n        avgSunshineContent = (\n          <div>\n            <p className=\"text-subheader\">Average Sunshine Per Year</p>\n            <div className=\"climate-iconData-wrapper\">\n              <FontAwesomeIcon className=\"icon-sun iconSize-medium\" icon={faSun} />\n              <div className=\"text-header\">{String(avgSunshine.percent_value * 100)}%</div>\n            </div>\n          </div>\n        );\n      }\n      \n      if (hasAvgRainyDays) {\n        const avgRainyDays = findData(climate, 'WEATHER-AV-NUMBER-RAINY-DAYS');\n        avgRainyDaysContent = (\n          <div>\n            <p className=\"text-subheader\">Average Rainy Days Per Year</p>\n            <div className=\"climate-iconData-wrapper\">\n              <FontAwesomeIcon className=\"icon-rain iconSize-medium\" icon={faCloudRain} />\n              <div className=\"text-header\">{String(avgRainyDays.float_value)}</div>\n            </div>\n          </div>\n        );\n      }\n      \n      if (hasAvgHighTemp) {\n        const avgHighTemp = findData(climate, 'WEATHER-AVERAGE-HIGH');\n        avgHighTempContent = (\n          <div>\n            <p className=\"text-subheader\">Average High Temperature</p>\n            <div className=\"climate-iconData-wrapper\">\n              <FontAwesomeIcon className=\"icon-tempHigh iconSize-medium\" icon={faTemperatureHigh} />\n              <div className=\"text-header\">{toFahrenheit(Number(avgHighTemp.string_value))}°F</div>\n            </div>\n          </div>\n        );\n      }\n      \n      if (hasAvgLowTemp) {\n        const avgLowTemp = findData(climate, 'WEATHER-AVERAGE-LOW');\n        avgLowTempContent = (\n          <div>\n            <p className=\"text-subheader\">Average Low Temperature</p>\n            <div className=\"climate-iconData-wrapper\">\n              <FontAwesomeIcon className=\"icon-tempLow iconSize-medium\" icon={faTemperatureLow} />\n              <div className=\"text-header\">{toFahrenheit(Number(avgLowTemp.string_value))}°F</div>\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <div>\n          <div className=\"climate-container\">\n            {weatherTypeContent}\n            {avgSunshineContent}\n            {avgRainyDaysContent}\n            {avgDayLengthContent}\n            {avgHighTempContent}\n            {avgLowTempContent}\n          </div>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div>\n      <h2 className=\"text-header\">Climate</h2>\n      {renderData()}\n    </div>\n  );\n}\n\nexport default Climate;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faAppleAlt,\n  faBreadSlice,\n  faBeer,\n  faMugHot,\n  faTicketAlt,\n  faRunning,\n  faBusAlt,\n  faHamburger,\n  faTaxi,\n  faUtensils\n} from '@fortawesome/free-solid-svg-icons';\n\n\nconst icons = [\n  <div className=\"icon-stackCircle is-small iconStack-red\"><FontAwesomeIcon className=\"iconSize-small\" icon={faAppleAlt} /></div>,\n  <div className=\"icon-stackCircle is-small iconStack-brown\"><FontAwesomeIcon className=\"iconSize-small\" icon={faBreadSlice} /></div>,\n  <div className=\"icon-stackCircle is-small iconStack-tan\"><FontAwesomeIcon className=\"iconSize-small\" icon={faMugHot} /></div>,\n  <div className=\"icon-stackCircle is-small iconStack-blue\"><FontAwesomeIcon className=\"iconSize-small\" icon={faTicketAlt} /></div>,\n  <div className=\"icon-stackCircle is-small iconStack-purple\"><FontAwesomeIcon className=\"iconSize-small\" icon={faRunning} /></div>,\n  <div className=\"icon-stackCircle is-small iconStack-yellow\"><FontAwesomeIcon className=\"iconSize-small\" icon={faBeer} /></div>,\n  <div className=\"icon-stackCircle is-small iconStack-teal\"><FontAwesomeIcon className=\"iconSize-small\" icon={faBusAlt} /></div>,\n  <div className=\"icon-stackCircle is-small iconStack-green\"><FontAwesomeIcon className=\"iconSize-small\" icon={faHamburger} /></div>,\n  <div className=\"icon-stackCircle is-small iconStack-amber\"><FontAwesomeIcon className=\"iconSize-small\" icon={faTaxi} /></div>,\n  <div className=\"icon-stackCircle is-small iconStack-orange\"><FontAwesomeIcon className=\"iconSize-small\" icon={faUtensils} /></div>,\n];\n\n\nclass CostOfLiving extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderData() {\n    const { data } = this.props;\n\n    if (data) {\n      return data.slice(1).map((item, index) => (\n        <li key={index}>\n          <div className=\"costLiving-iconData-wrapper\">\n            {icons[index]}\n            <div>{item.label}</div>\n          </div>\n          <div className=\"costLiving-cost\">${item.currency_dollar_value.toFixed(2)}</div>\n        </li>\n      ));\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"text-header\">{this.props.label}</h2>\n\n        <div className=\"text-subheader\">Daily / Monthly Expenses</div>\n        <ul className=\"costLiving-wrapper\">\n          {this.renderData()}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default CostOfLiving;","import React from 'react'\n\nconst JobMarket = ({ label, data }) => {\n  let startupSalary = data ? data.find(item => item.id === 'STARTUP-SALARIES-DETAIL') : '';\n  let jobAvail = data ? data.find(item => item.id === 'STARTUP-JOBS-AVAILABLE') : '';\n  let jobAvailContent = '';\n  let startupSalaryContent = '';\n\n  if (jobAvail) {\n    jobAvailContent = (\n      <div>\n        <h4 className=\"text-subheader\">{jobAvail.label}</h4>\n        <h3 className=\"text-header\">{jobAvail.int_value}</h3>\n      </div>\n    );\n  }\n\n  if (startupSalary) {\n    startupSalaryContent = (\n      <div>\n        <h4 className=\"text-subheader\">{startupSalary.label}</h4>\n        <h3 className=\"text-header\">${(startupSalary.currency_dollar_value).toLocaleString('en')}</h3>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"text-header\">{label}</h2>\n      <div className=\"job-market-stats\">\n        {jobAvailContent}\n        {startupSalaryContent}\n      </div>\n    </div>\n  );\n}\n\nexport default JobMarket;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSmile } from '@fortawesome/free-solid-svg-icons';\n\nconst Education = ({ label, data }) => {\n  const studentHappiness = data ? data.find(item => item.id === 'PISA-DETAIL-HAPPINESS') : '';\n  const pisaRanking = data ? data.find(item => item.id === 'PISA-RANKING') : '';\n  const pisaMathScore = data ? data.find(item => item.id === 'PISA-DETAIL-MATH-MEAN-SCORES') : '';\n  const pisaReadingScore = data ? data.find(item => item.id === 'PISA-DETAIL-READING-MEAN-SCORES') : '';\n  const pisaScienceScore = data ? data.find(item => item.id === 'PISA-DETAIL-SCIENCE-MEAN-SCORES') : '';\n  const bestUniversity = data ? data.find(item => item.id === 'UNIVERSITIES-BEST-RANKED-NAME') : '';\n  const bestUniversityRanking = data ? data.find(item => item.id === 'UNIVERSITIES-BEST-RANKED-RANK') : '';\n  let bestUniversityContent = '';\n\n  if (bestUniversity && bestUniversityRanking) {\n    bestUniversityContent = (\n      <div className=\"block\">\n        <div className=\"text-subheader\">Best University &amp; Ranking</div>\n        <div className=\"education-bestUni-wrapper card fill-black\">\n          <div className=\"text-subheader no-margin-bottom\">#{bestUniversityRanking.int_value}</div>\n          <div className=\"text-subheader no-margin-bottom\">{bestUniversity.string_value}</div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"text-header\">{label}</h2>\n      <div className=\"education-wrapper\">\n        <div>\n          <div>\n            <div className=\"text-subheader\">Percent of Happy High School Students</div>\n            <div className=\"education-happinessPercent\">\n              <div className=\"text-header\">{parseFloat(studentHappiness.percent_value * 100).toFixed(0)}%</div>\n            </div>\n          </div>\n          {bestUniversityContent}\n        </div>\n        <div>\n          <div>\n            <div className=\"text-subheader\">Average PISA Scores (High School)</div>\n            <p>The Program for International Student Assessment (PISA) is an international assessment that measures 15-year-old students' reading, mathematics, and science literacy every three years. Scores are reported on a scale from 0 to 1,000.</p>\n            <p><a href=\"https://nces.ed.gov/surveys/pisa/\" target=\"_blank\">Learn more about PISA</a></p>\n            <ul className=\"education-pisaScore-list\">\n              <li>\n                <h4 className=\"is-emphasized is-sublte\">Subject</h4>\n                <h4 className=\"is-emphasized is-sublte\">PISA Score</h4>\n              </li>\n              <li>\n                <h4 className=\"education-subject\">Math</h4>\n                <p className=\"is-emphasized\">{Math.round(pisaMathScore.float_value).toFixed(0)}</p>\n              </li>\n              <li>\n                <h4 className=\"education-subject\">Reading</h4>\n                <p className=\"is-emphasized\">{Math.round(pisaReadingScore.float_value).toFixed(0)}</p>\n              </li>\n              <li>\n                <h4 className=\"education-subject\">Science</h4>\n                <p className=\"is-emphasized\">{Math.round(pisaScienceScore.float_value).toFixed(0)}</p>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Education;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\n\nconst Housing = ({ label, data }) => {\n  const largeAptRent = data ? data.find(item => item.id === 'APARTMENT-RENT-LARGE') : '';\n  const mediumAptRent = data ? data.find(item => item.id === 'APARTMENT-RENT-MEDIUM') : '';\n  const smallAptRent = data ? data.find(item => item.id === 'APARTMENT-RENT-SMALL') : '';\n\n  return (\n    <div>\n      <h2 className=\"text-subheader\">Housing Costs</h2>\n      <ul className=\"housing-cards-wrapper\">\n        <li>\n          <div className=\"icon-stack-circle is-large fill-blue\">\n            <FontAwesomeIcon className=\"icon-home iconSize-large\" icon={faHome} />\n          </div>\n          <div>\n            <div className=\"housing-price\">${largeAptRent.currency_dollar_value}</div>\n            <div className=\"housing-description\">{largeAptRent.label}</div>\n          </div>\n        </li>\n        <li>\n          <div className=\"icon-stack-circle is-medium fill-blue\">\n            <FontAwesomeIcon className=\"icon-home iconSize-medium\" icon={faHome} />\n          </div>\n          <div>\n            <div className=\"housing-price\">${mediumAptRent.currency_dollar_value}</div>\n            <div className=\"housing-description\">{mediumAptRent.label}</div>\n          </div>\n        </li>\n        <li>\n          <div className=\"icon-stack-circle is-small fill-blue\">\n            <FontAwesomeIcon className=\"icon-home iconSize-small\" icon={faHome} />\n          </div>\n          <div>\n            <div className=\"housing-price\">${smallAptRent.currency_dollar_value}</div>\n            <div className=\"housing-description\">{smallAptRent.label}</div>\n          </div>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Housing;","import React from 'react';\n\nconst Safety = ({ label, data }) => {\n  const gunDeathRate = data ? data.find(item => item.id === 'GUN-DEATH-RATE') : '';\n  const gunOwnership = data ? data.find(item => item.id === 'GUN-OWNERSHIP') : '';\n\n  return (\n    <div>\n      <h2 className=\"text-header\">{label}</h2>\n      <div className=\"safety-cards-wrapper\">\n        <div className=\"safety-gunDeaths\">\n          <div>\n            <div className=\"text-subheader no-margin-bottom\">Gun-Related Deaths</div>\n            <p>Per 100K People / Year</p>\n          </div>\n          <div className=\"text-header\">{parseFloat(gunDeathRate.int_value).toFixed(1)}</div>\n        </div>\n        <div className=\"safety-gunOwnage\">\n          <div className=\"text-subheader no-margin-bottom\">Guns Per 100 People</div>\n          <div className=\"text-header\">{parseFloat(gunOwnership.int_value).toFixed(1)}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Safety;","import React from 'react';\n\nconst Lgbt = ({ data }) => {\n  const homosexualityRights = data ? data.find(item => item.id === 'LGBT-DETAIL-HOMOSEXUALITY') : '';\n  const adoptionRights = data ? data.find(item => item.id === 'LGBT-DETAIL-ADOPTION') : '';\n  const discrimination = data ? data.find(item => item.id === 'LGBT-DETAIL-DISCRIMINATION') : '';\n  const genderChangeRights = data ? data.find(item => item.id === 'LGBT-DETAIL-CHANGING-GENDER') : '';\n  const bloodDonation = data ? data.find(item => item.id === 'LGBT-DETAIL-DONATING-BLOOD') : '';\n  const marriageRights = data ? data.find(item => item.id === 'LGBT-DETAIL-MARRIAGE') : '';\n\n  return (\n    <div>\n      <h2 className=\"text-header\">LGBT Rights</h2>\n      <ul className=\"lgbt-list\">\n        <li>\n          <div>Homosexuality</div>\n          <div className=\"is-emphasized\">{homosexualityRights.string_value}</div>\n        </li>\n        <li>\n          <div>Marriage</div>\n          <div className=\"is-emphasized\">{marriageRights.string_value}</div>\n        </li>\n        <li>\n          <div>Adoption</div>\n          <div className=\"is-emphasized\">{adoptionRights.string_value}</div>\n        </li>\n        <li>\n          <div>Discrimination</div>\n          <div className=\"is-emphasized\">{discrimination.string_value}</div>\n        </li>\n        <li>\n          <div>Gender Change</div>\n          <div className=\"is-emphasized\">{genderChangeRights.string_value}</div>\n        </li>\n        <li>\n          <div>Blood Donation</div>\n          <div className=\"is-emphasized\">{bloodDonation.string_value}</div>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Lgbt;","import React from 'react';\n\nconst People = ({ people, population, language }) => {\n  // PEOPLE DATA\n  let elderlyPercent = '';\n  let elderlyPercentContent = '';\n  let lifeExpectancy = '';\n  let lifeExpectancyContent = '';\n  let medianAge = '';\n  let medianAgeContent = '';\n  let unemploymentRate = '';\n  let unemploymentRateContent = '';\n\n  // POPULATION DATA\n  let populationCount = '';\n  let populationContent = '';\n  let populationDensity = '';\n  let populationDensityContent = '';\n\n  // LANGUAGE DATA\n  let engProficiency = '';\n  let engProficiencyContent = '';\n  let spokenLanguage = '';\n  let spokenLanguageContent = '';\n\n  \n  /**\n   * We have to check and make sure that data exists\n   * because not all cities return the same data.\n   */\n  \n  // PEOPLE\n  if (people) {\n    const hasElderlyPercent = people.some(item => item.id === 'ELDERLY-PEOPLE');\n    const hasLifeExpectancy = people.some(item => item.id === 'LIFE-EXPECTANCY');\n    const hasMedianAge = people.some(item => item.id === 'MEDIAN-AGE');\n    const hasUnemploymentRate = people.some(item => item.id === 'UNEMPLOYMENT-RATE');\n    elderlyPercent = hasElderlyPercent ? people.find(item => item.id === 'ELDERLY-PEOPLE') : '';\n    lifeExpectancy = hasLifeExpectancy ? people.find(item => item.id === 'LIFE-EXPECTANCY') : '';\n    medianAge = hasMedianAge ? people.find(item => item.id === 'MEDIAN-AGE') : '';\n    unemploymentRate = hasUnemploymentRate ? people.find(item => item.id === 'UNEMPLOYMENT-RATE') : '';\n    \n    if (elderlyPercent) {\n      elderlyPercentContent = (\n        <div>\n          <h4>{String(Math.round(elderlyPercent.percent_value * 10000))}%</h4>\n          <p>Elderly People (65+)</p>\n        </div>\n      );\n    }\n\n    if (lifeExpectancy) {\n      lifeExpectancyContent = (\n        <div>\n          <h4>{String(lifeExpectancy.float_value)} yrs</h4>\n          <p>Life Expectancy at Birth</p>\n        </div>\n      );\n    }\n\n    if (medianAge) {\n      medianAgeContent = (\n        <div>\n          <h4>{String(medianAge.float_value)}</h4>\n          <p>Median Age</p>\n        </div>\n      );\n    }\n\n    if (unemploymentRate) {\n      unemploymentRateContent = (\n        <div>\n          <h4>{String(Math.round(unemploymentRate.percent_value * 10000))}%</h4>\n          <p>Unemployment Rate</p>\n        </div>\n      );\n    }\n  }\n\n  // LANGUAGE\n  if (language) {\n    const hasEngProficiency = language.some(item => item.id === 'ENGLISH-SKILLS-DETAIL');\n    const hasSpokenLanguage = language.some(item => item.id === 'SPOKEN-LANGUAGES');\n    engProficiency = hasEngProficiency ? language.find(item => item.id === 'ENGLISH-SKILLS-DETAIL') : '';\n    spokenLanguage = hasSpokenLanguage ? language.find(item => item.id === 'SPOKEN-LANGUAGES') : '';\n    \n    if (engProficiency) {\n      engProficiencyContent = (\n        <div>\n          <h4>{String(engProficiency.int_value)}</h4>\n          <p>English Proficiency</p>\n        </div>\n      );\n    }\n\n    if (spokenLanguage) {\n      spokenLanguageContent = (\n        <div>\n          <h4>{spokenLanguage.string_value}</h4>\n          <p>Spoken Language</p>\n        </div>\n      );\n    }\n  }\n  \n  // POPULATION\n  if (population) {\n    const hasPopulation = population.some(item => item.id === 'POPULATION-SIZE');\n    const hasPopulationDensity = population.some(item => item.id === 'POPULATION-UA-DENSITY');\n    populationCount = hasPopulation ? population.find(item => item.id === 'POPULATION-SIZE') : '';\n    populationDensity = hasPopulationDensity ? population.find(item => item.id === 'POPULATION-UA-DENSITY') : '';\n    \n    if (populationCount) {\n      populationContent = (\n        <div>\n          <h4>{(populationCount.float_value * 1000000).toLocaleString('en')}</h4>\n          <p>Population</p>\n        </div>\n      );\n    }\n\n    if (populationDensity) {\n      populationDensityContent = (\n        <div>\n          <h4>{(Math.round(populationDensity.float_value)).toLocaleString('en')}</h4>\n          <div>\n            <p>Population Density</p>\n            <span className=\"text-caption\">People Per Square Kilometer</span>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div>\n      <h2 className=\"text-header\">People</h2>\n      <div className=\"people-list\">\n        {populationContent}\n        {populationDensityContent}\n        {elderlyPercentContent}\n        {lifeExpectancyContent}\n        {medianAgeContent}\n        {unemploymentRateContent}\n        {spokenLanguageContent}\n        {engProficiencyContent}\n      </div>\n    </div>\n  );\n}\n\nexport default People;","/**\n * DEPENDENCIES\n */\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\n\n/**\n * COMPONENTS\n */\nimport Summary from '../components/Summary';\nimport LifeQuality from '../components/LifeQuality';\nimport Salaries from '../components/Salaries';\nimport Climate from '../components/Climate';\nimport CostOfLiving from '../components/CostOfLiving';\nimport JobMarket from '../components/JobMarket';\nimport Education from '../components/Education';\nimport Housing from '../components/Housing';\nimport Safety from '../components/Safety';\nimport Lgbt from '../components/Lgbt';\nimport People from '../components/People';\n\nconst BASE_URL_URBAN_AREAS = 'https://api.teleport.org/api/urban_areas';\n\nclass CityPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\t\t\tareaName: '',\n      cityId: this.props.match.params.cityId,\n      cityData: {},\n      summary: '',\n      uaScores: [],\n      uaSalaries: [],\n      climate: {},\n      costOfLiving: {},\n      jobMarket: {},\n      education: {},\n      housing: {},\n      safety: {},\n      lgbt: {},\n      people: {},\n      population: {},\n      language: {}\n    }\n  }\n\n  componentDidMount() {\n    const { cityId } = this.state;\n\n    if (cityId !== 'notfound') {\n      this.fetchData();\n    }\n  }\n  \n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.cityId !== this.state.cityId) {\n      this.fetchData();\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.match.params.cityId !== prevState.cityId) {\n      const cityId = nextProps.match.params.cityId;\n      return {\n        cityId,\n        cityData: {}\n      }\n    }\n    return null;\n  }\n\n  fetchData() {\n    const { cityId } = this.state;\n\n    Promise.all([\n      fetch(`${BASE_URL_URBAN_AREAS}/slug:${cityId}/`),\n      fetch(`${BASE_URL_URBAN_AREAS}/slug:${cityId}/scores/`),\n      fetch(`${BASE_URL_URBAN_AREAS}/slug:${cityId}/salaries/`),\n      fetch(`${BASE_URL_URBAN_AREAS}/slug:${cityId}/details/`),\n      fetch(`${BASE_URL_URBAN_AREAS}/slug:${cityId}/images/`)\n    ])\n    .then(res => Promise.all(res.map(r => r.json())))\n    .then(([ basicData,scoresData, salariesData, detailsData, imagesData ]) => {\n      const details = detailsData.categories;\n      console.log(details);\n\n      const climate = details.find(category => category.id === 'CLIMATE');\n      const costOfLiving = details.find(category => category.id === 'COST-OF-LIVING');\n      const jobMarket = details.find(category => category.id === 'JOB-MARKET');\n      const education = details.find(category => category.id === 'EDUCATION');\n      const housing = details.find(category => category.id === 'HOUSING');\n      const safety = details.find(category => category.id === 'SAFETY');\n      const lgbt = details.find(category => category.id === 'MINORITIES');\n      const people = details.find(category => category.id === 'INTERNAL');\n      const population = details.find(category => category.id === 'CITY-SIZE');\n\t\t\tconst language = details.find(category => category.id === 'LANGUAGE');\n\t\t\tconst imageUrl = imagesData.photos[0].image.web;\n\t\t\t// console.log(scoresData);\n      // console.log(imagesData);\n\n      this.setState({\n\t\t\t\tareaName: basicData.full_name,\n\t\t\t\tsummary: scoresData.summary,\n\t\t\t\timageUrl,\n        uaScores: scoresData.categories,\n        uaSalaries: salariesData.salaries,\n        uaDetails: detailsData.categories,\n        climate,\n        costOfLiving,\n        jobMarket,\n        education,\n        housing,\n        safety,\n        lgbt,\n        people,\n        population,\n        language\n      });\n    });\n  }\n\n  renderNotFound() {\n\t\tconst { cityId } = this.state;\n\t\tlet content = '';\n\n\t\tif (cityId === 'notfound') {\n\t\t\tcontent = (\n\t\t\t\t<div>\n\t\t\t\t\t<h3>Sorry but no data was found for this city.</h3>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn content;\n  }\n\n  renderCityData() {\n    const { cityId } = this.state;\n    let content;\n\n    if (cityId !== 'notfound') {\n      const { areaName, population, summary, imageUrl, uaScores,\n        climate, costOfLiving, housing, jobMarket, education,\n        safety, lgbt, people, language, uaSalaries\n        } = this.state;\n\n      content = (\n        <div>\n          <div className=\"section\">\n\t\t\t\t\t\t<Summary \n\t\t\t\t\t\t\tname={areaName}\n\t\t\t\t\t\t\tpopulation={population.data}\n\t\t\t\t\t\t\tsummary={summary}\n\t\t\t\t\t\t/>\n          </div>\n\t\t\t\t\t<div className=\"urban-area-image\">\n\t\t\t\t\t\t<img src={imageUrl} />\n\t\t\t\t\t</div>\n          <div className=\"section\">\n            <LifeQuality summary={summary} scores={uaScores} />\n          </div>\n          <div className=\"bg-black\">\n            <div className=\"section\">\n              <Climate climate={climate.data} />\n            </div>\n          </div>\n          <div className=\"section\">\n            <CostOfLiving label={costOfLiving.label} data={costOfLiving.data} />\n            <Housing label={housing.label} data={housing.data} />\n          </div>\n          <div className=\"bg-black\">\n            <div className=\"section\">\n              <JobMarket label={jobMarket.label} data={jobMarket.data} />\n            </div>\n          </div>\n          <div className=\"section\">\n            <Education label={education ? education.label : null} data={education ? education.data : null} />\n          </div>\n          <div className=\"bg-blue\">\n            <div className=\"section\">\n              <Safety label={safety.label} data={safety.data} />\n            </div>\n          </div>\n          <div className=\"section\">\n            <Lgbt data={lgbt.data} />\n          </div>\n          <div className=\"bg-orange\">\n            <div className=\"section\">\n              <People\n                people={people.data}\n                population={population.data}\n                language={language.data}\n              />\n            </div>\n          </div>\n          <div className=\"section\">\n            <Salaries salaries={uaSalaries} />\n          </div>\n        </div>\n      );\n    }\n\n    return content;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderCityData()}\n        {this.renderNotFound()}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(CityPage);","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport * as ROUTES from './constants/routes';\n\nimport TopNavigation from './components/TopNavigation';\nimport AboutPage from './pages/AboutPage';\nimport HomePage from './pages/HomePage';\nimport CityPage from './pages/CityPage';\n\nconst App = () => (\n  <Router>\n    <TopNavigation />\n    <Route exact path={process.env.PUBLIC_URL + ROUTES.HOME} component={HomePage} />\n    <Route path={process.env.PUBLIC_URL + ROUTES.ABOUT} component={AboutPage} />\n    <Route path={process.env.PUBLIC_URL + `${ROUTES.CITIES}/:cityId`} component={CityPage} />\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n* DEPENDENCIES\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n/**\n* COMPONENTS\n*/\nimport App from './App';\n\n/**\n* CONSTANTS\n*/\nimport * as serviceWorker from './serviceWorker';\n\n/**\n* STYLES\n*/\nimport './scss/styles.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}