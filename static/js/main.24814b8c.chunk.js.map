{"version":3,"sources":["components/SearchBox.js","constants/routes.js","components/TopNavigation.js","pages/AboutPage.js","components/UrbanAreasList.js","pages/HomePage.js","components/Summary.js","components/LifeQuality.js","constants/options/chartOptions.js","components/Salaries.js","helper/index.js","components/Climate.js","components/CostOfLiving.js","components/JobMarket.js","components/Education.js","components/Housing.js","components/Safety.js","components/Lgbt.js","components/People.js","pages/CityPage.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","city","suggestions","SearchBox","props","state","handleChange","bind","handleSubmit","e","this","setState","target","name","value","fetch","then","res","json","data","preventDefault","cityValue","apiUrl","find","matching_full_name","urbanAreaLink","slugName","split","history","push","slice","map","suggestion","index","key","onClick","handleSuggestionSelect","activeClass","length","onSubmit","className","onChange","placeholder","renderSuggestions","React","Component","withRouter","TopNavigation","to","alt","src","AboutPage","UrbanAreasList","urbanAreasList","catch","error","console","log","area","href","renderUrbanAreas","HomePage","Summary","populationCount","populationContent","population","summary","parsedSummary","ReactHtmlParser","item","id","float_value","toLocaleString","UrbanAreaScores","categories","scores","chart","prevProps","options","title","text","undefined","renderTo","type","xAxis","category","lineWidth","yAxis","gridLineWidth","visible","plotOptions","series","pointPadding","borderRadius","parseInt","score_out_of_10","color","pointWidth","showInLegend","credits","enabled","Highcharts","style","chartStyles","height","width","inverted","accessibility","description","tooltip","valuePrefix","valueSuffix","columnrange","dataLabels","format","legend","more","UrbanAreaSalaries","jobTitles","salaries","salary","job","salaryPercentiles","Math","round","salary_percentiles","percentile_25","percentile_75","dataExists","dataArr","some","findData","toFahrenheit","celsius","HighchartsMore","HighchartsSolidGauge","Climate","climate","weatherTypeContent","avgRainyDaysContent","avgSunshineContent","avgDayLengthContent","avgHighTempContent","avgLowTempContent","hasWeatherType","hasAvgDayLength","hasAvgRainyDays","hasAvgSunshine","hasAvgHighTemp","hasAvgLowTemp","weatherType","label","string_value","avgDayLength","icon","faSun","String","avgSunshinePercent","percent_value","toFixed","avgRainyDays","faCloudRain","avgHighTemp","faTemperatureHigh","Number","avgLowTemp","faTemperatureLow","renderData","icons","faAppleAlt","faBreadSlice","faMugHot","faTicketAlt","faRunning","faBeer","faBusAlt","faHamburger","faTaxi","faUtensils","CostOfLiving","currency_dollar_value","JobMarket","startupSalary","jobAvail","jobAvailContent","startupSalaryContent","int_value","Education","studentHappinessContent","bestUniversityContent","pisaScoresContent","pisaMathScoreContent","pisaReadingScoreContent","pisaScienceScoreContent","hasStudentHappiness","hasbestUniversity","hasbestUniversityRank","hasPisaMathScore","hasPisaReadingScore","hasPisaScienceScore","studentHappiness","parseFloat","bestUniversity","bestUniversityRank","pisaMathScore","pisaReadingScore","pisaScienceScore","rel","Housing","largeAptRent","mediumAptRent","smallAptRent","faHome","Safety","gunDeathRate","gunOwnership","Lgbt","homosexualityRights","adoptionRights","discrimination","genderChangeRights","bloodDonation","marriageRights","People","people","language","elderlyPercent","elderlyPercentContent","lifeExpectancy","lifeExpectancyContent","medianAge","medianAgeContent","unemploymentRate","unemploymentRateContent","populationDensity","populationDensityContent","engProficiency","engProficiencyContent","spokenLanguage","spokenLanguageContent","hasElderlyPercent","hasLifeExpectancy","hasMedianAge","hasUnemploymentRate","hasEngProficiency","hasSpokenLanguage","hasPopulation","hasPopulationDensity","BASE_URL_URBAN_AREAS","LoadingContent","speed","primaryColor","secondaryColor","x","y","rx","ry","CityPage","loading","areaName","cityId","match","params","cityData","uaScores","uaSalaries","costOfLiving","jobMarket","education","housing","safety","lgbt","fetchData","prevState","Promise","all","r","basicData","scoresData","salariesData","detailsData","imagesData","details","imageUrl","photos","image","web","full_name","uaDetails","finally","content","LifeQuality","Salaries","renderCityData","renderNotFound","nextProps","Footer","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","App","basename","process","exact","path","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24814b8c.chunk.js","sourcesContent":["/**\n * DEPENDENCIES\n */\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\n\n/**\n * CONSTANTS\n */\nimport * as ROUTES from '../constants/routes';\n\nconst INITIAL_STATE = {\n\tcity: '',\n\tsuggestions: []\n};\n\nclass SearchBox extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = { ...INITIAL_STATE };\n\n\t\t// BIND METHODS\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\thandleChange(e) {\n\t\tthis.setState({ [e.target.name]: e.target.value });\n\n\t\tfetch(`https://api.teleport.org/api/cities/?search=${e.target.value}`)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tsuggestions: data['_embedded']['city:search-results']\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t}\n\n\thandleSuggestionSelect(cityValue) {\n\t\tconst { suggestions } = this.state;\n\t\tconst selectedCity = suggestions.find(city => cityValue === city.matching_full_name);\n\t\tconst apiUrl = selectedCity['_links']['city:item']['href'];\n\n\t\tfetch(apiUrl)\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tlet urbanAreaLink = res['_links']['city:urban_area']\n\t\t\t\t\t? res['_links']['city:urban_area']['href']\n\t\t\t\t\t: null;\n\t\t\t\tlet slugName = urbanAreaLink ? urbanAreaLink.split('slug:')[1].split('/')[0] : 'notfound';\n\n\t\t\t\tthis.setState({ ...INITIAL_STATE });\n\t\t\t\tthis.props.history.push(`${ROUTES.CITIES}/${slugName}`);\n\t\t\t});\n\t}\n\n\trenderSuggestions() {\n\t\tconst { city, suggestions } = this.state;\n\n\t\tif (suggestions && city !== '') {\n\t\t\treturn suggestions.slice(0, 10).map((suggestion, index) => {\n\t\t\t\tconst city = suggestion.matching_full_name;\n\t\t\t\treturn (\n\t\t\t\t\t<li key={index} onClick={() => this.handleSuggestionSelect(city)}>\n\t\t\t\t\t\t{city}\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { city, suggestions } = this.state;\n\t\tconst activeClass = city && suggestions.length ? 'search-input is-active' : 'search-input';\n\n\t\treturn (\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t<input\n\t\t\t\t\tclassName={activeClass}\n\t\t\t\t\tname=\"city\"\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tvalue={this.state.city}\n\t\t\t\t\tplaceholder=\"Search cities\"\n\t\t\t\t/>\n\t\t\t\t<ul className=\"search-suggestions\">{this.renderSuggestions()}</ul>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default withRouter(SearchBox);\n","/**\n* ROUTES\n*/\n\nexport const HOME =     '/';\nexport const ABOUT =    '/about';\nexport const CITIES =   '/cities';\n","/**\n * DEPENDENCIES\n */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n/**\n * CONSTANTS\n */\nimport * as ROUTES from '../constants/routes';\nimport SearchBox from './SearchBox';\n\nconst TopNavigation = () => (\n\t<div className=\"topnav-container\">\n\t\t<div className=\"topnav-content\">\n\t\t\t<Link to={ROUTES.HOME} className=\"topnav-logo\">\n\t\t\t\t<img alt=\"World Life Quality Logo\" src=\"../logo.png\" />\n\t\t\t</Link>\n\t\t\t<SearchBox />\n\t\t</div>\n\t</div>\n);\n\nexport default TopNavigation;\n","import React from 'react';\n\nconst AboutPage = () => (\n  <div>\n    <h2 className=\"text-header\">About</h2>\n    <p className=\"text-body\">Life Quality provides statistics, insights, and measurements of lifequality for popular cities around the world.</p>\n    <p className=\"text-body\">Enter a city name in the search box above to find out more about the city.</p>\n  </div>\n);\n\nexport default AboutPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport * as ROUTES from '../constants/routes';\n\nclass UrbanAreasList extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\turbanAreasList: []\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://api.teleport.org/api/urban_areas/')\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tconst urbanAreasList = res['_links']['ua:item'];\n\n\t\t\t\tthis.setState({ urbanAreasList });\n\t\t\t})\n\t\t\t.catch(error => console.log(error));\n\t}\n\n\trenderUrbanAreas() {\n\t\tconst { urbanAreasList } = this.state;\n\n\t\tconst urbanAreas = urbanAreasList.map((area, index) => {\n\t\t\tconst { href, name } = area;\n\t\t\tconst slugName = href.split('slug:')[1].split('/')[0];\n\n\t\t\treturn (\n\t\t\t\t<li key={index}>\n\t\t\t\t\t<Link to={`${ROUTES.CITIES}/${slugName}`}>{name}</Link>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\n\t\treturn urbanAreas;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ul className=\"urban-areas-container\">{this.renderUrbanAreas()}</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default UrbanAreasList;\n","import React from 'react';\nimport UrbanAreasList from '../components/UrbanAreasList';\n\nconst HomePage = () => (\n  <div className=\"home-container\">\n    <h2 className=\"text-subheader\">Popular Cities Around The World</h2>\n    <p>Select a city below to discover</p>\n    <UrbanAreasList />\n  </div>\n);\n\nexport default HomePage;","/**\n * DEPENDENCIES\n */\nimport React from 'react';\nimport ReactHtmlParser from 'react-html-parser';\n\n\nconst Summary = ({ name, population, summary }) => {\n  const parsedSummary = summary ? ReactHtmlParser(summary) : '';\n  let populationCount;\n  let populationContent;\n\n  if (population) {\n    populationCount = population ? population.find(item => item.id === 'POPULATION-SIZE') : '';\n    populationCount = populationCount.float_value * 1000000000;\n    populationCount = populationCount.toLocaleString('en');\n\n    populationContent = (\n      <div className=\"summary-population\">\n        <h3>{populationCount}</h3>\n        <p className=\"text-subheader\">Population</p>\n      </div>\n    );\n  }\n    \n  return (\n    <div>\n      <p className=\"text-header\">{name}</p>\n\t\t\t<div className=\"summary-text\">{parsedSummary}</div>\n      <div className=\"summary-population\">\n        {populationContent}\n      </div>\n    </div>\n  );\n};\n\nexport default Summary;","import React from 'react';\nimport Highcharts from 'highcharts';\nimport ReactHtmlParser from 'react-html-parser';\n\nclass UrbanAreaScores extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      categories: [],\n      scores: [],\n    };\n\n    this.chart = null;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.scores !== this.props.scores) {\n      const categories = this.props.scores.map(category => category.name);\n      const scores = this.props.scores.map(category => parseInt(category.score_out_of_10));\n      \n      const options = {\n        title: {\n          text: undefined\n        },\n        chart: {\n          renderTo: 'uaScoresChart',\n          type: 'bar'\n        },\n        xAxis: {\n          categories: categories,\n          lineWidth: 0,\n        },\n        yAxis: {\n          title: {\n            text: null\n          },\n          gridLineWidth: 0,\n          visible: false\n        },\n        plotOptions: {\n          series: {\n            pointPadding: 0,\n          }\n        },\n        series: [\n          {\n            borderRadius: 4,\n            data: scores,\n            color: '#66BB6A',\n            pointWidth: 20,\n            showInLegend: false\n          }\n        ],\n        credits: {\n          enabled: false\n        }\n      };\n      this.chart = new Highcharts.chart(options);\n    }\n  }\n\n  renderSummary() {\n    const { summary } = this.props;\n    if (summary) {\n      return ReactHtmlParser(summary);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"text-header\">Life Quality</h2>\n        <div className=\"ua-scores-container\">\n          <div id=\"uaScoresChart\" style={chartStyles}></div>\n          <div></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst chartStyles = {\n  height: '600px',\n  width: '400px'\n};\n\nexport default UrbanAreaScores;","export const options = {\n  chart: {\n    renderTo: 'uaSalariesChart',\n    type: 'columnrange',\n    inverted: true\n  },\n  accessibility: {\n    description: 'A column range chart compares the monthly temperature variations throughout 2017 in Vik I Sogn, Norway. The chart is interactive and displays the temperature range for each month when hovering over the data. The temperature is measured in degrees Celsius on the X-axis and the months are plotted on the Y-axis. The lowest temperature is recorded in March at minus 10.2 Celsius. The lowest range of temperatures is found in December ranging from a low of minus 9 to a high of 8.6 Celsius. The highest temperature is found in July at 26.2 Celsius. July also has the highest range of temperatures from 6 to 26.2 Celsius. The broadest range of temperatures is found in May ranging from a low of minus 0.6 to a high of 23.1 Celsius.'\n  },\n  title: {\n    text: null\n  },\n  xAxis: {\n    categories: null\n  },\n  yAxis: {\n    title: {\n      text: null\n    }\n  },\n  tooltip: {\n    valuePrefix: '$',\n    valueSuffix: 'K'\n  },\n  plotOptions: {\n    columnrange: {\n      dataLabels: {\n        enabled: true,\n        format: '{y}K'\n      },\n      color: '#2196F3'\n    }\n  },\n  legend: {\n    enabled: false\n  },\n  series: [{\n    name: 'Salary',\n    data: null,\n    borderRadius: 4,\n    pointWidth: 18,\n  }],\n  credits: {\n    enabled: false\n  }\n}","import React from 'react';\nimport Highcharts from 'highcharts';\nimport more from 'highcharts/highcharts-more';\nimport { options } from '../constants/options/chartOptions';\nmore(Highcharts)\n\nclass UrbanAreaSalaries extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      jobTitles: null,\n    };\n\n    this.chart = null;\n\n    // this.handleOpenDropdown = this.handleOpenDropdown.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.salaries !== this.props.salaries) {\n      const jobTitles = this.props.salaries.map(salary => salary.job.title);\n      const salaryPercentiles = this.props.salaries.map(salary => {\n        const perc25 = Math.round(parseInt(salary.salary_percentiles.percentile_25) / 1000);\n        const perc75 = Math.round(parseInt(salary.salary_percentiles.percentile_75) / 1000);\n        return [perc25, perc75];\n      });\n\n      options.xAxis.categories = jobTitles;\n      options.series[0].data = salaryPercentiles;\n      // console.log(options.xAxis.categories)\n      \n      this.chart = new Highcharts.chart(options);\n    }\n  }\n\n\n\n  render() {\n    // const { jobTitles } = this.state;\n\n    return (\n      <div>\n        <h2 className=\"text-header\">Salaries</h2>\n        <p className=\"text-body\">Ranges are from 25th to 75th percentiles.</p>\n        <div id=\"uaSalariesChart\" style={chartStyles}></div>\n      </div>\n    );\n  }\n}\n\nconst chartStyles = {\n  height: '1200px',\n  width: '100%'\n};\n\nexport default UrbanAreaSalaries;","export const dataExists = (dataArr, id) => dataArr.some(item => item.id === id);\n\nexport const findData = (dataArr, id) => dataArr.find(category => category.id === id);\n\nexport const toFahrenheit = (celsius) => Math.round((celsius * (9/5)) + 32);","import React from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsMore from 'highcharts/highcharts-more';\nimport * as HighchartsSolidGauge from 'highcharts/modules/solid-gauge';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaSun,\n\tfaCloudRain,\n\tfaTemperatureHigh,\n\tfaTemperatureLow\n} from '@fortawesome/free-solid-svg-icons';\n\n/**\n * HELPER\n */\nimport { dataExists, findData, toFahrenheit } from '../helper';\n\nHighchartsMore(Highcharts);\nHighchartsSolidGauge(Highcharts);\n\nconst Climate = ({ climate }) => {\n\tconst renderData = () => {\n\t\tif (climate) {\n\t\t\tlet weatherTypeContent = '';\n\t\t\tlet avgRainyDaysContent = '';\n\t\t\tlet avgSunshineContent = '';\n\t\t\tlet avgDayLengthContent = '';\n\t\t\tlet avgHighTempContent = '';\n\t\t\tlet avgLowTempContent = '';\n\n\t\t\tconst hasWeatherType = dataExists(climate, 'WEATHER-TYPE');\n\t\t\tconst hasAvgDayLength = dataExists(climate, 'WEATHER-AV-DAY-LENGTH');\n\t\t\tconst hasAvgRainyDays = dataExists(climate, 'WEATHER-AV-NUMBER-RAINY-DAYS');\n\t\t\tconst hasAvgSunshine = dataExists(climate, 'WEATHER-AV-POSSIBILITY-SUNSHINE');\n\t\t\tconst hasAvgHighTemp = dataExists(climate, 'WEATHER-AVERAGE-HIGH');\n\t\t\tconst hasAvgLowTemp = dataExists(climate, 'WEATHER-AVERAGE-LOW');\n\n\t\t\tif (hasWeatherType) {\n\t\t\t\tconst weatherType = findData(climate, 'WEATHER-TYPE');\n\t\t\t\tweatherTypeContent = (\n\t\t\t\t\t<div className=\"climate-weatherType\">\n\t\t\t\t\t\t<p className=\"text-subheader\">{weatherType.label}</p>\n\t\t\t\t\t\t<div>{weatherType.string_value}</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (hasAvgDayLength) {\n\t\t\t\tconst avgDayLength = findData(climate, 'WEATHER-AV-DAY-LENGTH');\n\t\t\t\tavgDayLengthContent = (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p className=\"text-subheader\">{avgDayLength.label}</p>\n\t\t\t\t\t\t<div className=\"climate-iconData-wrapper\">\n\t\t\t\t\t\t\t<FontAwesomeIcon className=\"icon-sun iconSize-medium\" icon={faSun} />\n\t\t\t\t\t\t\t<div className=\"text-header\">{String(avgDayLength.float_value)}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (hasAvgSunshine) {\n\t\t\t\tconst avgSunshine = findData(climate, 'WEATHER-AV-POSSIBILITY-SUNSHINE');\n\t\t\t\tconst avgSunshinePercent = (avgSunshine.percent_value * 100).toFixed(0);\n\t\t\t\tavgSunshineContent = (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p className=\"text-subheader\">Average Sunshine Per Year</p>\n\t\t\t\t\t\t<div className=\"climate-iconData-wrapper\">\n\t\t\t\t\t\t\t<FontAwesomeIcon className=\"icon-sun iconSize-medium\" icon={faSun} />\n\t\t\t\t\t\t\t<div className=\"text-header\">{String(avgSunshinePercent)}%</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (hasAvgRainyDays) {\n\t\t\t\tconst avgRainyDays = findData(climate, 'WEATHER-AV-NUMBER-RAINY-DAYS');\n\t\t\t\tavgRainyDaysContent = (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p className=\"text-subheader\">Average Rainy Days Per Year</p>\n\t\t\t\t\t\t<div className=\"climate-iconData-wrapper\">\n\t\t\t\t\t\t\t<FontAwesomeIcon className=\"icon-rain iconSize-medium\" icon={faCloudRain} />\n\t\t\t\t\t\t\t<div className=\"text-header\">{String(avgRainyDays.float_value)}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (hasAvgHighTemp) {\n\t\t\t\tconst avgHighTemp = findData(climate, 'WEATHER-AVERAGE-HIGH');\n\t\t\t\tavgHighTempContent = (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p className=\"text-subheader\">Average High Temperature</p>\n\t\t\t\t\t\t<div className=\"climate-iconData-wrapper\">\n\t\t\t\t\t\t\t<FontAwesomeIcon className=\"icon-tempHigh iconSize-medium\" icon={faTemperatureHigh} />\n\t\t\t\t\t\t\t<div className=\"text-header\">{toFahrenheit(Number(avgHighTemp.string_value))}°F</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (hasAvgLowTemp) {\n\t\t\t\tconst avgLowTemp = findData(climate, 'WEATHER-AVERAGE-LOW');\n\t\t\t\tavgLowTempContent = (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p className=\"text-subheader\">Average Low Temperature</p>\n\t\t\t\t\t\t<div className=\"climate-iconData-wrapper\">\n\t\t\t\t\t\t\t<FontAwesomeIcon className=\"icon-tempLow iconSize-medium\" icon={faTemperatureLow} />\n\t\t\t\t\t\t\t<div className=\"text-header\">{toFahrenheit(Number(avgLowTemp.string_value))}°F</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"climate-container\">\n\t\t\t\t\t\t{weatherTypeContent}\n\t\t\t\t\t\t{avgSunshineContent}\n\t\t\t\t\t\t{avgRainyDaysContent}\n\t\t\t\t\t\t{avgDayLengthContent}\n\t\t\t\t\t\t{avgHighTempContent}\n\t\t\t\t\t\t{avgLowTempContent}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"bg-black\">\n\t\t\t<div className=\"section\">\n\t\t\t\t<h2 className=\"text-header\">Climate</h2>\n\t\t\t\t{renderData()}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Climate;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n\tfaAppleAlt,\n\tfaBreadSlice,\n\tfaBeer,\n\tfaMugHot,\n\tfaTicketAlt,\n\tfaRunning,\n\tfaBusAlt,\n\tfaHamburger,\n\tfaTaxi,\n\tfaUtensils\n} from '@fortawesome/free-solid-svg-icons';\n\nconst icons = [\n\t<div className=\"icon-stackCircle is-small iconStack-red\">\n\t\t<FontAwesomeIcon className=\"iconSize-small\" icon={faAppleAlt} />\n\t</div>,\n\t<div className=\"icon-stackCircle is-small iconStack-brown\">\n\t\t<FontAwesomeIcon className=\"iconSize-small\" icon={faBreadSlice} />\n\t</div>,\n\t<div className=\"icon-stackCircle is-small iconStack-tan\">\n\t\t<FontAwesomeIcon className=\"iconSize-small\" icon={faMugHot} />\n\t</div>,\n\t<div className=\"icon-stackCircle is-small iconStack-blue\">\n\t\t<FontAwesomeIcon className=\"iconSize-small\" icon={faTicketAlt} />\n\t</div>,\n\t<div className=\"icon-stackCircle is-small iconStack-purple\">\n\t\t<FontAwesomeIcon className=\"iconSize-small\" icon={faRunning} />\n\t</div>,\n\t<div className=\"icon-stackCircle is-small iconStack-yellow\">\n\t\t<FontAwesomeIcon className=\"iconSize-small\" icon={faBeer} />\n\t</div>,\n\t<div className=\"icon-stackCircle is-small iconStack-teal\">\n\t\t<FontAwesomeIcon className=\"iconSize-small\" icon={faBusAlt} />\n\t</div>,\n\t<div className=\"icon-stackCircle is-small iconStack-green\">\n\t\t<FontAwesomeIcon className=\"iconSize-small\" icon={faHamburger} />\n\t</div>,\n\t<div className=\"icon-stackCircle is-small iconStack-amber\">\n\t\t<FontAwesomeIcon className=\"iconSize-small\" icon={faTaxi} />\n\t</div>,\n\t<div className=\"icon-stackCircle is-small iconStack-orange\">\n\t\t<FontAwesomeIcon className=\"iconSize-small\" icon={faUtensils} />\n\t</div>\n];\n\nconst CostOfLiving = ({ label, data }) => {\n\tconst renderData = () => {\n\t\tif (data) {\n\t\t\treturn data.slice(1).map((item, index) => (\n\t\t\t\t<li key={index}>\n\t\t\t\t\t<div className=\"costLiving-iconData-wrapper\">\n\t\t\t\t\t\t{icons[index]}\n\t\t\t\t\t\t<div>{item.label}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"costLiving-cost\">${item.currency_dollar_value.toFixed(2)}</div>\n\t\t\t\t</li>\n\t\t\t));\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h2 className=\"text-header\">{label}</h2>\n\n\t\t\t<div className=\"text-subheader\">Daily / Monthly Expenses</div>\n\t\t\t<ul className=\"costLiving-wrapper\">{renderData()}</ul>\n\t\t</div>\n\t);\n};\n\nexport default CostOfLiving;\n","import React from 'react'\n\nconst JobMarket = ({ data }) => {\n  let startupSalary = data ? data.find(item => item.id === 'STARTUP-SALARIES-DETAIL') : '';\n  let jobAvail = data ? data.find(item => item.id === 'STARTUP-JOBS-AVAILABLE') : '';\n  let jobAvailContent = '';\n  let startupSalaryContent = '';\n\n  if (jobAvail) {\n    jobAvailContent = (\n      <div>\n        <h4 className=\"text-subheader\">{jobAvail.label}</h4>\n        <h3 className=\"text-header\">{jobAvail.int_value}</h3>\n      </div>\n    );\n  }\n\n  if (startupSalary) {\n    startupSalaryContent = (\n      <div>\n        <h4 className=\"text-subheader\">{startupSalary.label}</h4>\n        <h3 className=\"text-header\">${(startupSalary.currency_dollar_value).toLocaleString('en')}</h3>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"text-header\">Job Market</h2>\n      <div className=\"job-market-stats\">\n        {jobAvailContent}\n        {startupSalaryContent}\n      </div>\n    </div>\n  );\n}\n\nexport default JobMarket;","import React from 'react';\n\nimport { dataExists, findData } from '../helper';\n\nconst Education = ({ data }) => {\n\tlet studentHappinessContent = '';\n\tlet bestUniversityContent = '';\n\tlet pisaScoresContent = '';\n\tlet pisaMathScoreContent = '';\n\tlet pisaReadingScoreContent = '';\n\tlet pisaScienceScoreContent = '';\n\n\tif (data) {\n\t\tconst hasStudentHappiness = dataExists(data, 'PISA-DETAIL-HAPPINESS');\n\t\tconst hasbestUniversity = dataExists(data, 'UNIVERSITIES-BEST-RANKED-NAME');\n\t\tconst hasbestUniversityRank = dataExists(data, 'UNIVERSITIES-BEST-RANKED-RANK');\n\t\tconst hasPisaMathScore = dataExists(data, 'PISA-DETAIL-MATH-MEAN-SCORES');\n\t\tconst hasPisaReadingScore = dataExists(data, 'PISA-DETAIL-READING-MEAN-SCORES');\n\t\tconst hasPisaScienceScore = dataExists(data, 'PISA-DETAIL-SCIENCE-MEAN-SCORES');\n\n\t\tif (hasStudentHappiness) {\n\t\t\tconst studentHappiness = findData(data, 'PISA-DETAIL-HAPPINESS');\n\t\t\tstudentHappinessContent = (\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"text-subheader\">Percent of Happy High School Students</div>\n\t\t\t\t\t<div className=\"education-happinessPercent\">\n\t\t\t\t\t\t<div className=\"text-header\">\n\t\t\t\t\t\t\t{parseFloat(studentHappiness.percent_value * 100).toFixed(0)}%\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tif (hasbestUniversity && hasbestUniversityRank) {\n\t\t\tconst bestUniversity = findData(data, 'UNIVERSITIES-BEST-RANKED-NAME');\n\t\t\tconst bestUniversityRank = findData(data, 'UNIVERSITIES-BEST-RANKED-RANK');\n\t\t\tbestUniversityContent = (\n\t\t\t\t<div className=\"block\">\n\t\t\t\t\t<div className=\"text-subheader\">Best University &amp; Ranking</div>\n\t\t\t\t\t<div className=\"education-bestUni-wrapper card fill-black\">\n\t\t\t\t\t\t<div className=\"text-subheader no-margin-bottom\">#{bestUniversityRank.int_value}</div>\n\t\t\t\t\t\t<div className=\"text-subheader no-margin-bottom\">{bestUniversity.string_value}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tif (hasPisaMathScore) {\n\t\t\tconst pisaMathScore = findData(data, 'PISA-DETAIL-MATH-MEAN-SCORES');\n\t\t\tpisaMathScoreContent = (\n\t\t\t\t<li>\n\t\t\t\t\t<h4 className=\"education-subject\">Math</h4>\n\t\t\t\t\t<p className=\"is-emphasized\">{Math.round(pisaMathScore.float_value).toFixed(0)}</p>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\n\t\tif (hasPisaReadingScore) {\n\t\t\tconst pisaReadingScore = findData(data, 'PISA-DETAIL-READING-MEAN-SCORES');\n\t\t\tpisaReadingScoreContent = (\n\t\t\t\t<li>\n\t\t\t\t\t<h4 className=\"education-subject\">Reading</h4>\n\t\t\t\t\t<p className=\"is-emphasized\">{Math.round(pisaReadingScore.float_value).toFixed(0)}</p>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\n\t\tif (hasPisaScienceScore) {\n\t\t\tconst pisaScienceScore = findData(data, 'PISA-DETAIL-SCIENCE-MEAN-SCORES');\n\t\t\tpisaScienceScoreContent = (\n\t\t\t\t<li>\n\t\t\t\t\t<h4 className=\"education-subject\">Science</h4>\n\t\t\t\t\t<p className=\"is-emphasized\">{Math.round(pisaScienceScore.float_value).toFixed(0)}</p>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\n\t\tif (hasPisaMathScore || hasPisaReadingScore || hasPisaScienceScore) {\n\t\t\tpisaScoresContent = (\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"text-subheader\">Average PISA Scores (High School)</div>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThe Program for International Student Assessment (PISA) is an international assessment\n\t\t\t\t\t\tthat measures 15-year-old students' reading, mathematics, and science literacy every\n\t\t\t\t\t\tthree years. Scores are reported on a scale from 0 to 1,000.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<a href=\"https://nces.ed.gov/surveys/pisa/\" rel=\"noopener noreferrer\" target=\"_blank\">\n\t\t\t\t\t\t\tLearn more about PISA\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</p>\n\t\t\t\t\t<ul className=\"education-pisaScore-list\">\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<h4 className=\"is-emphasized is-sublte\">Subject</h4>\n\t\t\t\t\t\t\t<h4 className=\"is-emphasized is-sublte\">PISA Score</h4>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t{pisaMathScoreContent}\n\t\t\t\t\t\t{pisaReadingScoreContent}\n\t\t\t\t\t\t{pisaScienceScoreContent}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"section\">\n\t\t\t<h2 className=\"text-header\">Education</h2>\n\t\t\t<div className=\"education-wrapper\">\n\t\t\t\t<div>\n\t\t\t\t\t{studentHappinessContent}\n\t\t\t\t\t{bestUniversityContent}\n\t\t\t\t</div>\n\t\t\t\t{pisaScoresContent}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Education;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\n\nconst Housing = ({ label, data }) => {\n  const largeAptRent = data ? data.find(item => item.id === 'APARTMENT-RENT-LARGE') : '';\n  const mediumAptRent = data ? data.find(item => item.id === 'APARTMENT-RENT-MEDIUM') : '';\n  const smallAptRent = data ? data.find(item => item.id === 'APARTMENT-RENT-SMALL') : '';\n\n  return (\n    <div>\n      <h2 className=\"text-subheader\">Housing Costs</h2>\n      <ul className=\"housing-cards-wrapper\">\n        <li>\n          <div className=\"icon-stack-circle is-large fill-blue\">\n            <FontAwesomeIcon className=\"icon-home iconSize-large\" icon={faHome} />\n          </div>\n          <div>\n            <div className=\"housing-price\">${largeAptRent.currency_dollar_value}</div>\n            <div className=\"housing-description\">{largeAptRent.label}</div>\n          </div>\n        </li>\n        <li>\n          <div className=\"icon-stack-circle is-medium fill-blue\">\n            <FontAwesomeIcon className=\"icon-home iconSize-medium\" icon={faHome} />\n          </div>\n          <div>\n            <div className=\"housing-price\">${mediumAptRent.currency_dollar_value}</div>\n            <div className=\"housing-description\">{mediumAptRent.label}</div>\n          </div>\n        </li>\n        <li>\n          <div className=\"icon-stack-circle is-small fill-blue\">\n            <FontAwesomeIcon className=\"icon-home iconSize-small\" icon={faHome} />\n          </div>\n          <div>\n            <div className=\"housing-price\">${smallAptRent.currency_dollar_value}</div>\n            <div className=\"housing-description\">{smallAptRent.label}</div>\n          </div>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Housing;","import React from 'react';\n\nconst Safety = ({ label, data }) => {\n  const gunDeathRate = data ? data.find(item => item.id === 'GUN-DEATH-RATE') : '';\n  const gunOwnership = data ? data.find(item => item.id === 'GUN-OWNERSHIP') : '';\n\n  return (\n    <div>\n      <h2 className=\"text-header\">{label}</h2>\n      <div className=\"safety-cards-wrapper\">\n        <div className=\"safety-gunDeaths\">\n          <div>\n            <div className=\"text-subheader no-margin-bottom\">Gun-Related Deaths</div>\n            <p>Per 100K People / Year</p>\n          </div>\n          <div className=\"text-header\">{parseFloat(gunDeathRate.int_value).toFixed(1)}</div>\n        </div>\n        <div className=\"safety-gunOwnage\">\n          <div className=\"text-subheader no-margin-bottom\">Guns Per 100 People</div>\n          <div className=\"text-header\">{parseFloat(gunOwnership.int_value).toFixed(1)}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Safety;","import React from 'react';\n\nconst Lgbt = ({ data }) => {\n  const homosexualityRights = data ? data.find(item => item.id === 'LGBT-DETAIL-HOMOSEXUALITY') : '';\n  const adoptionRights = data ? data.find(item => item.id === 'LGBT-DETAIL-ADOPTION') : '';\n  const discrimination = data ? data.find(item => item.id === 'LGBT-DETAIL-DISCRIMINATION') : '';\n  const genderChangeRights = data ? data.find(item => item.id === 'LGBT-DETAIL-CHANGING-GENDER') : '';\n  const bloodDonation = data ? data.find(item => item.id === 'LGBT-DETAIL-DONATING-BLOOD') : '';\n  const marriageRights = data ? data.find(item => item.id === 'LGBT-DETAIL-MARRIAGE') : '';\n\n  return (\n    <div>\n      <h2 className=\"text-header\">LGBT Rights</h2>\n      <ul className=\"lgbt-list\">\n        <li>\n          <div>Homosexuality</div>\n          <div className=\"is-emphasized\">{homosexualityRights.string_value}</div>\n        </li>\n        <li>\n          <div>Marriage</div>\n          <div className=\"is-emphasized\">{marriageRights.string_value}</div>\n        </li>\n        <li>\n          <div>Adoption</div>\n          <div className=\"is-emphasized\">{adoptionRights.string_value}</div>\n        </li>\n        <li>\n          <div>Discrimination</div>\n          <div className=\"is-emphasized\">{discrimination.string_value}</div>\n        </li>\n        <li>\n          <div>Gender Change</div>\n          <div className=\"is-emphasized\">{genderChangeRights.string_value}</div>\n        </li>\n        <li>\n          <div>Blood Donation</div>\n          <div className=\"is-emphasized\">{bloodDonation.string_value}</div>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Lgbt;","import React from 'react';\n\nconst People = ({ people, population, language }) => {\n  // PEOPLE DATA\n  let elderlyPercent = '';\n  let elderlyPercentContent = '';\n  let lifeExpectancy = '';\n  let lifeExpectancyContent = '';\n  let medianAge = '';\n  let medianAgeContent = '';\n  let unemploymentRate = '';\n  let unemploymentRateContent = '';\n\n  // POPULATION DATA\n  let populationCount = '';\n  let populationContent = '';\n  let populationDensity = '';\n  let populationDensityContent = '';\n\n  // LANGUAGE DATA\n  let engProficiency = '';\n  let engProficiencyContent = '';\n  let spokenLanguage = '';\n  let spokenLanguageContent = '';\n\n  \n  /**\n   * We have to check and make sure that data exists\n   * because not all cities return the same data.\n   */\n  \n  // PEOPLE\n  if (people) {\n    const hasElderlyPercent = people.some(item => item.id === 'ELDERLY-PEOPLE');\n    const hasLifeExpectancy = people.some(item => item.id === 'LIFE-EXPECTANCY');\n    const hasMedianAge = people.some(item => item.id === 'MEDIAN-AGE');\n    const hasUnemploymentRate = people.some(item => item.id === 'UNEMPLOYMENT-RATE');\n    elderlyPercent = hasElderlyPercent ? people.find(item => item.id === 'ELDERLY-PEOPLE') : '';\n    lifeExpectancy = hasLifeExpectancy ? people.find(item => item.id === 'LIFE-EXPECTANCY') : '';\n    medianAge = hasMedianAge ? people.find(item => item.id === 'MEDIAN-AGE') : '';\n    unemploymentRate = hasUnemploymentRate ? people.find(item => item.id === 'UNEMPLOYMENT-RATE') : '';\n    \n    if (elderlyPercent) {\n      elderlyPercentContent = (\n        <div>\n          <h4>{String(Math.round(elderlyPercent.percent_value * 10000))}%</h4>\n          <p>Elderly People (65+)</p>\n        </div>\n      );\n    }\n\n    if (lifeExpectancy) {\n      lifeExpectancyContent = (\n        <div>\n          <h4>{String(lifeExpectancy.float_value)} yrs</h4>\n          <p>Life Expectancy at Birth</p>\n        </div>\n      );\n    }\n\n    if (medianAge) {\n      medianAgeContent = (\n        <div>\n          <h4>{String(medianAge.float_value)}</h4>\n          <p>Median Age</p>\n        </div>\n      );\n    }\n\n    if (unemploymentRate) {\n      unemploymentRateContent = (\n        <div>\n          <h4>{String(Math.round(unemploymentRate.percent_value * 10000))}%</h4>\n          <p>Unemployment Rate</p>\n        </div>\n      );\n    }\n  }\n\n  // LANGUAGE\n  if (language) {\n    const hasEngProficiency = language.some(item => item.id === 'ENGLISH-SKILLS-DETAIL');\n    const hasSpokenLanguage = language.some(item => item.id === 'SPOKEN-LANGUAGES');\n    engProficiency = hasEngProficiency ? language.find(item => item.id === 'ENGLISH-SKILLS-DETAIL') : '';\n    spokenLanguage = hasSpokenLanguage ? language.find(item => item.id === 'SPOKEN-LANGUAGES') : '';\n    \n    if (engProficiency) {\n      engProficiencyContent = (\n        <div>\n          <h4>{String(engProficiency.int_value)}</h4>\n          <p>English Proficiency</p>\n        </div>\n      );\n    }\n\n    if (spokenLanguage) {\n      spokenLanguageContent = (\n        <div>\n          <h4>{spokenLanguage.string_value}</h4>\n          <p>Spoken Language</p>\n        </div>\n      );\n    }\n  }\n  \n  // POPULATION\n  if (population) {\n    const hasPopulation = population.some(item => item.id === 'POPULATION-SIZE');\n    const hasPopulationDensity = population.some(item => item.id === 'POPULATION-UA-DENSITY');\n    populationCount = hasPopulation ? population.find(item => item.id === 'POPULATION-SIZE') : '';\n    populationDensity = hasPopulationDensity ? population.find(item => item.id === 'POPULATION-UA-DENSITY') : '';\n    \n    if (populationCount) {\n      populationContent = (\n        <div>\n          <h4>{(populationCount.float_value * 1000000).toLocaleString('en')}</h4>\n          <p>Population</p>\n        </div>\n      );\n    }\n\n    if (populationDensity) {\n      populationDensityContent = (\n        <div>\n          <h4>{(Math.round(populationDensity.float_value)).toLocaleString('en')}</h4>\n          <div>\n            <p>Population Density</p>\n            <span className=\"text-caption\">People Per Square Kilometer</span>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div>\n      <h2 className=\"text-header\">People</h2>\n      <div className=\"people-list\">\n        {populationContent}\n        {populationDensityContent}\n        {elderlyPercentContent}\n        {lifeExpectancyContent}\n        {medianAgeContent}\n        {unemploymentRateContent}\n        {spokenLanguageContent}\n        {engProficiencyContent}\n      </div>\n    </div>\n  );\n}\n\nexport default People;","/**\n * DEPENDENCIES\n */\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ContentLoader from 'react-content-loader';\n\n/**\n * COMPONENTS\n */\nimport Summary from '../components/Summary';\nimport LifeQuality from '../components/LifeQuality';\nimport Salaries from '../components/Salaries';\nimport Climate from '../components/Climate';\nimport CostOfLiving from '../components/CostOfLiving';\nimport JobMarket from '../components/JobMarket';\nimport Education from '../components/Education';\nimport Housing from '../components/Housing';\nimport Safety from '../components/Safety';\nimport Lgbt from '../components/Lgbt';\nimport People from '../components/People';\n\nconst BASE_URL_URBAN_AREAS = 'https://api.teleport.org/api/urban_areas';\n\nconst LoadingContent = () => (\n\t<ContentLoader height={160} width={400} speed={1} primaryColor=\"#f3f3f3\" secondaryColor=\"#ecebeb\">\n\t\t<rect x=\"0\" y=\"13\" rx=\"4\" ry=\"4\" width=\"400\" height=\"9\" />\n\t\t<rect x=\"0\" y=\"29\" rx=\"4\" ry=\"4\" width=\"100\" height=\"8\" />\n\t\t<rect x=\"0\" y=\"50\" rx=\"4\" ry=\"4\" width=\"400\" height=\"10\" />\n\t\t<rect x=\"0\" y=\"65\" rx=\"4\" ry=\"4\" width=\"400\" height=\"10\" />\n\t\t<rect x=\"0\" y=\"79\" rx=\"4\" ry=\"4\" width=\"100\" height=\"10\" />\n\t\t<rect x=\"0\" y=\"99\" rx=\"5\" ry=\"5\" width=\"400\" height=\"200\" />\n\t</ContentLoader>\n);\n\nclass CityPage extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tloading: false,\n\t\t\tareaName: '',\n\t\t\tcityId: this.props.match.params.cityId,\n\t\t\tcityData: {},\n\t\t\tsummary: '',\n\t\t\tuaScores: [],\n\t\t\tuaSalaries: [],\n\t\t\tclimate: {},\n\t\t\tcostOfLiving: {},\n\t\t\tjobMarket: {},\n\t\t\teducation: {},\n\t\t\thousing: {},\n\t\t\tsafety: {},\n\t\t\tlgbt: {},\n\t\t\tpeople: {},\n\t\t\tpopulation: {},\n\t\t\tlanguage: {}\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { cityId } = this.state;\n\n\t\tif (cityId !== 'notfound') {\n\t\t\tthis.fetchData();\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (prevState.cityId !== this.state.cityId) {\n\t\t\tthis.fetchData();\n\t\t}\n\t}\n\n\tstatic getDerivedStateFromProps(nextProps, prevState) {\n\t\tif (nextProps.match.params.cityId !== prevState.cityId) {\n\t\t\tconst cityId = nextProps.match.params.cityId;\n\t\t\treturn {\n\t\t\t\tcityId,\n\t\t\t\tcityData: {}\n\t\t\t};\n\t\t}\n\t\treturn null;\n\t}\n\n\tfetchData() {\n\t\tthis.setState({ loading: true });\n\t\tconst { cityId } = this.state;\n\n\t\tPromise.all([\n\t\t\tfetch(`${BASE_URL_URBAN_AREAS}/slug:${cityId}/`),\n\t\t\tfetch(`${BASE_URL_URBAN_AREAS}/slug:${cityId}/scores/`),\n\t\t\tfetch(`${BASE_URL_URBAN_AREAS}/slug:${cityId}/salaries/`),\n\t\t\tfetch(`${BASE_URL_URBAN_AREAS}/slug:${cityId}/details/`),\n\t\t\tfetch(`${BASE_URL_URBAN_AREAS}/slug:${cityId}/images/`)\n\t\t])\n\t\t\t.then(res => Promise.all(res.map(r => r.json())))\n\t\t\t.then(([basicData, scoresData, salariesData, detailsData, imagesData]) => {\n\t\t\t\tconst details = detailsData.categories;\n\t\t\t\tconst climate = details.find(category => category.id === 'CLIMATE');\n\t\t\t\tconst costOfLiving = details.find(category => category.id === 'COST-OF-LIVING');\n\t\t\t\tconst jobMarket = details.find(category => category.id === 'JOB-MARKET');\n\t\t\t\tconst education = details.find(category => category.id === 'EDUCATION');\n\t\t\t\tconst housing = details.find(category => category.id === 'HOUSING');\n\t\t\t\tconst safety = details.find(category => category.id === 'SAFETY');\n\t\t\t\tconst lgbt = details.find(category => category.id === 'MINORITIES');\n\t\t\t\tconst people = details.find(category => category.id === 'INTERNAL');\n\t\t\t\tconst population = details.find(category => category.id === 'CITY-SIZE');\n\t\t\t\tconst language = details.find(category => category.id === 'LANGUAGE');\n\t\t\t\tconst imageUrl = imagesData.photos[0].image.web;\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tareaName: basicData.full_name,\n\t\t\t\t\tsummary: scoresData.summary,\n\t\t\t\t\timageUrl,\n\t\t\t\t\tuaScores: scoresData.categories,\n\t\t\t\t\tuaSalaries: salariesData.salaries,\n\t\t\t\t\tuaDetails: detailsData.categories,\n\t\t\t\t\tclimate,\n\t\t\t\t\tcostOfLiving,\n\t\t\t\t\tjobMarket,\n\t\t\t\t\teducation,\n\t\t\t\t\thousing,\n\t\t\t\t\tsafety,\n\t\t\t\t\tlgbt,\n\t\t\t\t\tpeople,\n\t\t\t\t\tpopulation,\n\t\t\t\t\tlanguage\n\t\t\t\t});\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tthis.setState({ loading: false });\n\t\t\t});\n\t}\n\n\trenderNotFound() {\n\t\tconst { cityId } = this.state;\n\t\tlet content = '';\n\n\t\tif (cityId === 'notfound') {\n\t\t\tcontent = (\n\t\t\t\t<div>\n\t\t\t\t\t<h3>Sorry but no data was found for this city.</h3>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn content;\n\t}\n\n\trenderCityData() {\n\t\tconst { cityId } = this.state;\n\t\tlet content;\n\n\t\tif (cityId !== 'notfound') {\n\t\t\tconst {\n\t\t\t\tareaName,\n\t\t\t\tpopulation,\n\t\t\t\tsummary,\n\t\t\t\timageUrl,\n\t\t\t\tuaScores,\n\t\t\t\tclimate,\n\t\t\t\tcostOfLiving,\n\t\t\t\thousing,\n\t\t\t\tjobMarket,\n\t\t\t\teducation,\n\t\t\t\tsafety,\n\t\t\t\tlgbt,\n\t\t\t\tpeople,\n\t\t\t\tlanguage,\n\t\t\t\tuaSalaries\n\t\t\t} = this.state;\n\n\t\t\tcontent = (\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"section\">\n\t\t\t\t\t\t<Summary name={areaName} population={population.data} summary={summary} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"urban-area-image\">\n\t\t\t\t\t\t<img alt={areaName} src={imageUrl} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"section\">\n\t\t\t\t\t\t<LifeQuality summary={summary} scores={uaScores} />\n\t\t\t\t\t</div>\n\t\t\t\t\t{climate ? <Climate climate={climate.data} /> : ''}\n\t\t\t\t\t<div className=\"section\">\n\t\t\t\t\t\t<CostOfLiving label={costOfLiving.label} data={costOfLiving.data} />\n\t\t\t\t\t\t<Housing label={housing.label} data={housing.data} />\n\t\t\t\t\t</div>\n\t\t\t\t\t{jobMarket ? (\n\t\t\t\t\t\t<div className=\"bg-black\">\n\t\t\t\t\t\t\t<div className=\"section\">\n\t\t\t\t\t\t\t\t<JobMarket data={jobMarket.data} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t''\n\t\t\t\t\t)}\n\t\t\t\t\t{education ? <Education data={education.data} /> : ''}\n\t\t\t\t\t<div className=\"bg-blue\">\n\t\t\t\t\t\t<div className=\"section\">\n\t\t\t\t\t\t\t<Safety label={safety.label} data={safety.data} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"section\">\n\t\t\t\t\t\t<Lgbt data={lgbt.data} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"bg-orange\">\n\t\t\t\t\t\t<div className=\"section\">\n\t\t\t\t\t\t\t<People people={people.data} population={population.data} language={language.data} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"section\">\n\t\t\t\t\t\t<Salaries salaries={uaSalaries} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn content;\n\t}\n\n\trender() {\n\t\tconst { loading } = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{loading ? (\n\t\t\t\t\t<div className=\"section\">\n\t\t\t\t\t\t<LoadingContent />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\t\t\t\t{this.renderCityData()}\n\t\t\t\t{this.renderNotFound()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(CityPage);\n","import React from 'react';\n\nconst Footer = () => {\n\treturn (\n\t\t<footer>\n\t\t\t<a\n\t\t\t\thref=\"https://www.freepik.com/free-photos-vectors/logo\"\n\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\ttarget=\"_blank\">\n\t\t\t\t<img alt=\"World Life Quality Logo\" src=\"./logo.png\" />\n\t\t\t</a>\n\t\t\t<p>World Life Quality</p>\n\t\t</footer>\n\t);\n};\n\nexport default Footer;\n","/**\n * DEPENDENCIES\n */\nimport React, { useEffect } from 'react';\nimport { HashRouter as Router, Route, useLocation } from 'react-router-dom';\n\n/**\n * CONSTANTS\n */\nimport * as ROUTES from './constants/routes';\n\n/**\n * COMPONENTS\n */\nimport TopNavigation from './components/TopNavigation';\nimport AboutPage from './pages/AboutPage';\nimport HomePage from './pages/HomePage';\nimport CityPage from './pages/CityPage';\nimport Footer from './components/Footer';\n\nconst ScrollToTop = () => {\n\tconst { pathname } = useLocation();\n\n\tuseEffect(() => {\n\t\twindow.scrollTo(0, 0);\n\t}, [pathname]);\n\n\treturn null;\n};\n\nconst App = () => (\n\t<Router basename={process.env.PUBLIC_URL}>\n\t\t<TopNavigation />\n\t\t<div className=\"app-container\">\n\t\t\t<Route exact path={ROUTES.HOME} component={HomePage} />\n\t\t\t<Route path={ROUTES.ABOUT} component={AboutPage} />\n\t\t\t<Route path={`${ROUTES.CITIES}/:cityId`} component={CityPage} />\n\t\t</div>\n\t\t<ScrollToTop />\n\t\t<Footer />\n\t</Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n* DEPENDENCIES\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n/**\n* COMPONENTS\n*/\nimport App from './App';\n\n/**\n* CONSTANTS\n*/\nimport * as serviceWorker from './serviceWorker';\n\n/**\n* STYLES\n*/\nimport './scss/styles.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}