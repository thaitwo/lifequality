{"version":3,"sources":["components/SearchBox.js","constants/routes.js","components/TopNavigation.js","pages/AboutPage.js","pages/HomePage.js","components/LifeQuality.js","constants/options/chartOptions.js","components/Salaries.js","helper/index.js","components/Climate.js","components/CostOfLiving.js","components/JobMarket.js","components/Education.js","components/Housing.js","components/Safety.js","components/Lgbt.js","components/People.js","pages/CityPage.js","App.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","city","suggestions","SearchBox","props","state","handleChange","bind","handleSubmit","e","this","setState","target","name","value","fetch","then","res","json","data","preventDefault","cityValue","cityId","find","matching_full_name","split","history","push","process","slice","map","suggestion","index","key","onClick","handleSuggestionSelect","onSubmit","className","onChange","renderSuggestions","React","Component","withRouter","TopNavigation","to","AboutPage","HomePage","UrbanAreaScores","categories","scores","chart","prevProps","options","title","text","undefined","renderTo","type","xAxis","category","lineWidth","yAxis","gridLineWidth","visible","plotOptions","series","pointPadding","borderRadius","parseInt","score_out_of_10","color","pointWidth","showInLegend","credits","enabled","Highcharts","summary","ReactHtmlParser","renderSummary","id","style","chartStyles","height","width","inverted","accessibility","description","tooltip","valuePrefix","valueSuffix","columnrange","dataLabels","format","legend","more","UrbanAreaSalaries","jobTitles","salaries","salary","job","salaryPercentiles","Math","round","salary_percentiles","percentile_25","percentile_75","dataExists","dataArr","some","item","toFahrenheit","celsius","HighchartsMore","HighchartsSolidGauge","Climate","avgDayLength","avgRainyDaysContent","avgRainyDaysExists","weatherType","avgHighTemp","avgLowTemp","avgRainyDays","icon","faCloudRain","float_value","label","string_value","faSun","faTemperatureHigh","Number","faTemperatureLow","renderData","icons","faAppleAlt","faBreadSlice","faMugHot","faTicketAlt","faRunning","faBeer","faBusAlt","faHamburger","faTaxi","faUtensils","CostOfLiving","currency_dollar_value","toFixed","JobMarket","jobAvail","startupSalary","int_value","Education","studentHappiness","pisaMathScore","pisaReadingScore","pisaScienceScore","bestUniversity","bestUniversityRanking","parseFloat","percent_value","href","Housing","largeAptRent","mediumAptRent","smallAptRent","faHome","Safety","gunDeathRate","gunOwnership","Lgbt","homosexualityRights","adoptionRights","discrimination","genderChangeRights","bloodDonation","marriageRights","People","population","language","elderlyPercent","lifeExpectancy","medianAge","uaPopulation","populationDensity","spokenLanguage","englishProficiency","toString","CityPage","match","params","cityData","uaSummary","uaScores","uaSalaries","climate","costOfLiving","jobMarket","education","housing","safety","lgbt","people","fetchData","prevState","urbanAreaUrl","Promise","all","r","details","detailData","console","log","uaDetails","full_name","LifeQuality","Salaries","nextProps","CityInfo","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.462d1940.chunk.js","sourcesContent":["/**\n* DEPENDENCIES\n*/\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\n\n/**\n* CONSTANTS\n*/\nimport * as ROUTES from '../constants/routes';\n\nconst INITIAL_STATE = {\n  city: '',\n  suggestions: []\n}\n\nclass SearchBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n\n    // BIND METHODS\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n\n    fetch(`https://api.teleport.org/api/cities/?search=${e.target.value}`)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          suggestions: data['_embedded']['city:search-results']\n        });\n      })\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  handleSuggestionSelect(cityValue) {\n    const { suggestions } = this.state;\n    const selectedCity = suggestions.find(city => cityValue === city.matching_full_name);\n    const apiUrl = selectedCity['_links']['city:item']['href'];\n    const cityId = apiUrl.split('geonameid:')[1].split('/')[0];\n    this.setState({ ...INITIAL_STATE });\n    this.props.history.push(process.env.PUBLIC_URL + `${ROUTES.CITY}/${cityId}`);\n  }\n\n  renderSuggestions() {\n    const { city, suggestions } = this.state;\n\n    if (suggestions && city !== '') {\n      return suggestions.slice(0,10).map((suggestion, index) => {\n        const city = suggestion.matching_full_name;\n        return <li key={index} onClick={() => this.handleSuggestionSelect(city)}>{city}</li>;\n      });\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input className=\"search-input\" name=\"city\" onChange={this.handleChange} value={this.state.city} />\n        <ul className=\"search-suggestions\">\n          {this.renderSuggestions()}\n        </ul>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(SearchBox);","/**\n* ROUTES\n*/\n\nexport const HOME =     '/';\nexport const ABOUT =    '/about';\nexport const CITY =     '/city';\n","/**\n* DEPENDENCIES\n*/\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n/**\n* CONSTANTS\n*/\nimport * as ROUTES from '../constants/routes';\nimport SearchBox from './SearchBox';\n\n\nconst TopNavigation = () => (\n  <div className=\"topnav-container\">\n    <div className=\"topnav-content\">\n      <Link to={process.env.PUBLIC_URL + ROUTES.HOME} className=\"topnav-logo\">\n        <h2>Life Quality</h2>\n      </Link>\n      <SearchBox />\n      <ul className=\"topnav-menu\">\n        <li>\n          <Link to={process.env.PUBLIC_URL + ROUTES.ABOUT}>About</Link>\n        </li>\n      </ul>\n    </div>\n  </div>\n);\n\nexport default TopNavigation;","import React from 'react';\n\nconst AboutPage = () => (\n  <div>\n    <h2 className=\"text-header\">About</h2>\n    <p className=\"text-body\">You can search cities around the world and see the life quality measurements for that city.</p>\n  </div>\n);\n\nexport default AboutPage;","import React from 'react';\n\nconst HomePage = () => (\n  <div>\n    <h2>Welcome to Life Quality</h2>\n  </div>\n);\n\nexport default HomePage;","import React from 'react';\nimport Highcharts from 'highcharts';\nimport ReactHtmlParser from 'react-html-parser';\n\nclass UrbanAreaScores extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      categories: [],\n      scores: [],\n    };\n\n    this.chart = null;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.scores !== this.props.scores) {\n      const categories = this.props.scores.map(category => category.name);\n      const scores = this.props.scores.map(category => parseInt(category.score_out_of_10));\n      \n      const options = {\n        title: {\n          text: undefined\n        },\n        chart: {\n          renderTo: 'uaScoresChart',\n          type: 'bar'\n        },\n        xAxis: {\n          categories: categories,\n          lineWidth: 0,\n        },\n        yAxis: {\n          title: {\n            text: null\n          },\n          gridLineWidth: 0,\n          visible: false\n        },\n        plotOptions: {\n          series: {\n            pointPadding: 0,\n          }\n        },\n        series: [\n          {\n            borderRadius: 4,\n            data: scores,\n            color: '#66BB6A',\n            pointWidth: 20,\n            showInLegend: false\n          }\n        ],\n        credits: {\n          enabled: false\n        }\n      };\n      this.chart = new Highcharts.chart(options);\n    }\n  }\n\n  renderSummary() {\n    const { summary } = this.props;\n    if (summary) {\n      return ReactHtmlParser(summary);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"text-header\">Life Quality</h2>\n        <div className=\"ua-scores-container\">\n          <div className=\"ua-scores-summary\">\n            {this.renderSummary()}\n          </div>\n          <div id=\"uaScoresChart\" style={chartStyles}></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst chartStyles = {\n  height: '600px',\n  width: '400px'\n};\n\nexport default UrbanAreaScores;","export const options = {\n  chart: {\n    renderTo: 'uaSalariesChart',\n    type: 'columnrange',\n    inverted: true\n  },\n  accessibility: {\n    description: 'A column range chart compares the monthly temperature variations throughout 2017 in Vik I Sogn, Norway. The chart is interactive and displays the temperature range for each month when hovering over the data. The temperature is measured in degrees Celsius on the X-axis and the months are plotted on the Y-axis. The lowest temperature is recorded in March at minus 10.2 Celsius. The lowest range of temperatures is found in December ranging from a low of minus 9 to a high of 8.6 Celsius. The highest temperature is found in July at 26.2 Celsius. July also has the highest range of temperatures from 6 to 26.2 Celsius. The broadest range of temperatures is found in May ranging from a low of minus 0.6 to a high of 23.1 Celsius.'\n  },\n  title: {\n    text: null\n  },\n  xAxis: {\n    categories: null\n  },\n  yAxis: {\n    title: {\n      text: null\n    }\n  },\n  tooltip: {\n    valuePrefix: '$',\n    valueSuffix: 'K'\n  },\n  plotOptions: {\n    columnrange: {\n      dataLabels: {\n        enabled: true,\n        format: '{y}K'\n      }\n    }\n  },\n  legend: {\n    enabled: false\n  },\n  series: [{\n    name: 'Salary',\n    data: null,\n    borderRadius: 4,\n    pointWidth: 18,\n  }],\n  credits: {\n    enabled: false\n  }\n}","import React from 'react';\nimport Highcharts from 'highcharts';\nimport more from 'highcharts/highcharts-more';\nimport { options } from '../constants/options/chartOptions';\nmore(Highcharts)\n\nclass UrbanAreaSalaries extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      jobTitles: null,\n    };\n\n    this.chart = null;\n\n    // this.handleOpenDropdown = this.handleOpenDropdown.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.salaries !== this.props.salaries) {\n      const jobTitles = this.props.salaries.map(salary => salary.job.title);\n      const salaryPercentiles = this.props.salaries.map(salary => {\n        const perc25 = Math.round(parseInt(salary.salary_percentiles.percentile_25) / 1000);\n        const perc75 = Math.round(parseInt(salary.salary_percentiles.percentile_75) / 1000);\n        return [perc25, perc75];\n      });\n\n      options.xAxis.categories = jobTitles;\n      options.series[0].data = salaryPercentiles;\n      // console.log(options.xAxis.categories)\n      \n      this.chart = new Highcharts.chart(options);\n    }\n  }\n\n\n\n  render() {\n    // const { jobTitles } = this.state;\n\n    return (\n      <div>\n        <h2 className=\"text-header\">Salaries</h2>\n        <p className=\"text-body\">Ranges are from 25th to 75th percentiles.</p>\n        <div id=\"uaSalariesChart\" style={chartStyles}></div>\n      </div>\n    );\n  }\n}\n\nconst chartStyles = {\n  height: '1200px',\n  width: '100%'\n};\n\nexport default UrbanAreaSalaries;","export const dataExists = (dataArr, id) => dataArr.some(item => item.id === id);\n\nexport const toFahrenheit = (celsius) => Math.round((celsius * (9/5)) + 32);","import React from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsMore from 'highcharts/highcharts-more';\nimport * as HighchartsSolidGauge from 'highcharts/modules/solid-gauge';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSun, faCloudRain, faTemperatureHigh, faTemperatureLow } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * HELPER\n */\nimport { dataExists, toFahrenheit } from '../helper';\n\nHighchartsMore(Highcharts);\nHighchartsSolidGauge(Highcharts);\n\nclass Climate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      avgDayLength: 0\n    }\n\n    this.chart = null;\n  }\n\n  renderData() {\n    const { data } = this.props;\n\n    if (data) {\n      let avgRainyDaysContent = '';\n      let avgSunshineContent = '';\n      const avgRainyDaysExists = dataExists(data, 'WEATHER-AV-NUMBER-RAINY-DAYS');\n      const avgSunshineExists = dataExists(data, 'WEATHER-AV-POSSIBILITY-SUNSHINE');\n\n      const weatherType = data.find(category => category.id === 'WEATHER-TYPE');\n      const avgDayLength = data.find(category => category.id === 'WEATHER-AV-DAY-LENGTH');\n      const avgHighTemp = data.find(category => category.id === 'WEATHER-AVERAGE-HIGH');\n      const avgLowTemp = data.find(category => category.id === 'WEATHER-AVERAGE-LOW');\n      const avgRainyDays = avgRainyDaysExists ? data.find(category => category.id === 'WEATHER-AV-NUMBER-RAINY-DAYS') : '';\n\n      if (avgRainyDaysExists) {\n        avgRainyDaysContent = (\n          <div>\n            <p className=\"text-subheader\">Average Rainy Days Per Year</p>\n            <div className=\"climate-iconData-wrapper\">\n              <FontAwesomeIcon className=\"icon-rain iconSize-medium\" icon={faCloudRain} />\n              <div className=\"text-header\">{avgRainyDays.float_value}</div>\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <div>\n          <div className=\"climate-weatherType\">\n            <p className=\"text-subheader\">{weatherType.label}</p>\n            <div>{weatherType.string_value}</div>\n          </div>\n          <div className=\"climate-data-wrapper\">\n            <div>\n              <p className=\"text-subheader\">{avgDayLength.label}</p>\n              <div className=\"climate-iconData-wrapper\">\n                <FontAwesomeIcon className=\"icon-sun iconSize-medium\" icon={faSun} />\n                <div className=\"text-header\">{avgDayLength.float_value}</div>\n              </div>\n            </div>\n            {avgRainyDaysContent}\n            <div>\n              <p className=\"text-subheader\">Average High Temperature</p>\n              <div className=\"climate-iconData-wrapper\">\n                <FontAwesomeIcon className=\"icon-tempHigh iconSize-medium\" icon={faTemperatureHigh} />\n                <div className=\"text-header\">{toFahrenheit(Number(avgHighTemp.string_value))}°F</div>\n              </div>\n            </div>\n            <div>\n              <p className=\"text-subheader\">Average Low Temperature</p>\n              <div className=\"climate-iconData-wrapper\">\n                <FontAwesomeIcon className=\"icon-tempLow iconSize-medium\" icon={faTemperatureLow} />\n                <div className=\"text-header\">{toFahrenheit(Number(avgLowTemp.string_value))}°F</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"text-header\">{this.props.label}</h2>\n        {this.renderData()}\n      </div>\n    )\n  }\n}\n\nexport default Climate;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faAppleAlt,\n  faBreadSlice,\n  faBeer,\n  faMugHot,\n  faTicketAlt,\n  faRunning,\n  faBusAlt,\n  faHamburger,\n  faTaxi,\n  faUtensils\n} from '@fortawesome/free-solid-svg-icons';\n\n\nconst icons = [\n  <div className=\"icon-stackCircle is-small iconStack-red\"><FontAwesomeIcon className=\"iconSize-small\" icon={faAppleAlt} /></div>,\n  <div className=\"icon-stackCircle is-small iconStack-brown\"><FontAwesomeIcon className=\"iconSize-small\" icon={faBreadSlice} /></div>,\n  <div className=\"icon-stackCircle is-small iconStack-tan\"><FontAwesomeIcon className=\"iconSize-small\" icon={faMugHot} /></div>,\n  <div className=\"icon-stackCircle is-small iconStack-blue\"><FontAwesomeIcon className=\"iconSize-small\" icon={faTicketAlt} /></div>,\n  <div className=\"icon-stackCircle is-small iconStack-purple\"><FontAwesomeIcon className=\"iconSize-small\" icon={faRunning} /></div>,\n  <div className=\"icon-stackCircle is-small iconStack-yellow\"><FontAwesomeIcon className=\"iconSize-small\" icon={faBeer} /></div>,\n  <div className=\"icon-stackCircle is-small iconStack-teal\"><FontAwesomeIcon className=\"iconSize-small\" icon={faBusAlt} /></div>,\n  <div className=\"icon-stackCircle is-small iconStack-green\"><FontAwesomeIcon className=\"iconSize-small\" icon={faHamburger} /></div>,\n  <div className=\"icon-stackCircle is-small iconStack-amber\"><FontAwesomeIcon className=\"iconSize-small\" icon={faTaxi} /></div>,\n  <div className=\"icon-stackCircle is-small iconStack-orange\"><FontAwesomeIcon className=\"iconSize-small\" icon={faUtensils} /></div>,\n];\n\n\nclass CostOfLiving extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderData() {\n    const { data } = this.props;\n\n    if (data) {\n      return data.slice(1).map((item, index) => (\n        <li key={index}>\n          <div className=\"costLiving-iconData-wrapper\">\n            {icons[index]}\n            <div>{item.label}</div>\n          </div>\n          <div className=\"costLiving-cost\">${item.currency_dollar_value.toFixed(2)}</div>\n        </li>\n      ));\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"text-header\">{this.props.label}</h2>\n\n        <div className=\"text-subheader\">Daily / Monthly Expenses</div>\n        <ul className=\"costLiving-wrapper\">\n          {this.renderData()}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default CostOfLiving;","import React from 'react'\n\nconst JobMarket = ({ label, data }) => {\n  const jobAvail = data ? data.find(item => item.id === 'STARTUP-JOBS-AVAILABLE') : '';\n  const startupSalary = data ? data.find(item => item.id === 'STARTUP-SALARIES-DETAIL') : '';\n\n  return (\n    <div>\n      <h2 className=\"text-header\">{label}</h2>\n      <div>\n        <div className=\"text-subheader\">{jobAvail.label}</div>\n        <div>{jobAvail.int_value}</div>\n      </div>\n      <div>\n        <div className=\"text-subheader\">{startupSalary.label}</div>\n        <div>{startupSalary.currency_dollar_value}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default JobMarket;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSmile } from '@fortawesome/free-solid-svg-icons';\n\nconst Education = ({ label, data }) => {\n  const studentHappiness = data ? data.find(item => item.id === 'PISA-DETAIL-HAPPINESS') : '';\n  const pisaRanking = data ? data.find(item => item.id === 'PISA-RANKING') : '';\n  const pisaMathScore = data ? data.find(item => item.id === 'PISA-DETAIL-MATH-MEAN-SCORES') : '';\n  const pisaReadingScore = data ? data.find(item => item.id === 'PISA-DETAIL-READING-MEAN-SCORES') : '';\n  const pisaScienceScore = data ? data.find(item => item.id === 'PISA-DETAIL-SCIENCE-MEAN-SCORES') : '';\n  const bestUniversity = data ? data.find(item => item.id === 'UNIVERSITIES-BEST-RANKED-NAME') : '';\n  const bestUniversityRanking = data ? data.find(item => item.id === 'UNIVERSITIES-BEST-RANKED-RANK') : '';\n\n  return (\n    <div>\n      <h2 className=\"text-header\">{label}</h2>\n      <div className=\"education-wrapper\">\n        <div>\n          <div>\n            <div className=\"text-subheader\">Percent of Happy High School Students</div>\n            <div className=\"education-happinessPercent\">\n              <div className=\"text-header\">{parseFloat(studentHappiness.percent_value * 100).toFixed(0)}%</div>\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"text-subheader\">Best University &amp; Ranking</div>\n            <div className=\"education-bestUni-wrapper card fill-black\">\n              <div className=\"text-subheader no-margin-bottom\">#{bestUniversityRanking.int_value}</div>\n              <div className=\"text-subheader no-margin-bottom\">{bestUniversity.string_value}</div>\n            </div>\n          </div>\n        </div>\n        <div>\n          <div>\n            <div className=\"text-subheader\">Average PISA Scores (High School)</div>\n            <p>The Program for International Student Assessment (PISA) is an international assessment that measures 15-year-old students' reading, mathematics, and science literacy every three years. Scores are reported on a scale from 0 to 1,000.</p>\n            <p><a href=\"https://nces.ed.gov/surveys/pisa/\" target=\"_blank\">Learn more about PISA</a></p>\n            <ul className=\"education-pisaScore-list\">\n              <li>\n                <h4 className=\"is-emphasized is-sublte\">Subject</h4>\n                <h4 className=\"is-emphasized is-sublte\">PISA Score</h4>\n              </li>\n              <li>\n                <h4 className=\"education-subject\">Math</h4>\n                <p className=\"is-emphasized\">{Math.round(pisaMathScore.float_value).toFixed(0)}</p>\n              </li>\n              <li>\n                <h4 className=\"education-subject\">Reading</h4>\n                <p className=\"is-emphasized\">{Math.round(pisaReadingScore.float_value).toFixed(0)}</p>\n              </li>\n              <li>\n                <h4 className=\"education-subject\">Science</h4>\n                <p className=\"is-emphasized\">{Math.round(pisaScienceScore.float_value).toFixed(0)}</p>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Education;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\n\nconst Housing = ({ label, data }) => {\n  const largeAptRent = data ? data.find(item => item.id === 'APARTMENT-RENT-LARGE') : '';\n  const mediumAptRent = data ? data.find(item => item.id === 'APARTMENT-RENT-MEDIUM') : '';\n  const smallAptRent = data ? data.find(item => item.id === 'APARTMENT-RENT-SMALL') : '';\n\n  return (\n    <div>\n      <h2 className=\"text-subheader\">Housing Costs</h2>\n      <ul className=\"housing-cards-wrapper\">\n        <li>\n          <div className=\"icon-stack-circle is-large fill-blue\">\n            <FontAwesomeIcon className=\"icon-home iconSize-large\" icon={faHome} />\n          </div>\n          <div>\n            <div className=\"housing-price\">${largeAptRent.currency_dollar_value}</div>\n            <div className=\"housing-description\">{largeAptRent.label}</div>\n          </div>\n        </li>\n        <li>\n          <div className=\"icon-stack-circle is-medium fill-blue\">\n            <FontAwesomeIcon className=\"icon-home iconSize-medium\" icon={faHome} />\n          </div>\n          <div>\n            <div className=\"housing-price\">${mediumAptRent.currency_dollar_value}</div>\n            <div className=\"housing-description\">{mediumAptRent.label}</div>\n          </div>\n        </li>\n        <li>\n          <div className=\"icon-stack-circle is-small fill-blue\">\n            <FontAwesomeIcon className=\"icon-home iconSize-small\" icon={faHome} />\n          </div>\n          <div>\n            <div className=\"housing-price\">${smallAptRent.currency_dollar_value}</div>\n            <div className=\"housing-description\">{smallAptRent.label}</div>\n          </div>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Housing;","import React from 'react';\n\nconst Safety = ({ label, data }) => {\n  const gunDeathRate = data ? data.find(item => item.id === 'GUN-DEATH-RATE') : '';\n  const gunOwnership = data ? data.find(item => item.id === 'GUN-OWNERSHIP') : '';\n\n  return (\n    <div>\n      <h2 className=\"text-header\">{label}</h2>\n      <div className=\"safety-cards-wrapper\">\n        <div className=\"safety-gunDeaths\">\n          <div>\n            <div className=\"text-subheader no-margin-bottom\">Gun-Related Deaths</div>\n            <p>Per 100K People / Year</p>\n          </div>\n          <div className=\"text-header\">{parseFloat(gunDeathRate.int_value).toFixed(1)}</div>\n        </div>\n        <div className=\"safety-gunOwnage\">\n          <div className=\"text-subheader no-margin-bottom\">Guns Per 100 People</div>\n          <div className=\"text-header\">{parseFloat(gunOwnership.int_value).toFixed(1)}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Safety;","import React from 'react';\n\nconst Lgbt = ({ data }) => {\n  const homosexualityRights = data ? data.find(item => item.id === 'LGBT-DETAIL-HOMOSEXUALITY') : '';\n  const adoptionRights = data ? data.find(item => item.id === 'LGBT-DETAIL-ADOPTION') : '';\n  const discrimination = data ? data.find(item => item.id === 'LGBT-DETAIL-DISCRIMINATION') : '';\n  const genderChangeRights = data ? data.find(item => item.id === 'LGBT-DETAIL-CHANGING-GENDER') : '';\n  const bloodDonation = data ? data.find(item => item.id === 'LGBT-DETAIL-DONATING-BLOOD') : '';\n  const marriageRights = data ? data.find(item => item.id === 'LGBT-DETAIL-MARRIAGE') : '';\n\n  return (\n    <div>\n      <h2 className=\"text-header\">LGBT Rights</h2>\n      <ul className=\"lgbt-list\">\n        <li>\n          <div>Homosexuality</div>\n          <div className=\"is-emphasized\">{homosexualityRights.string_value}</div>\n        </li>\n        <li>\n          <div>Marriage</div>\n          <div className=\"is-emphasized\">{marriageRights.string_value}</div>\n        </li>\n        <li>\n          <div>Adoption</div>\n          <div className=\"is-emphasized\">{adoptionRights.string_value}</div>\n        </li>\n        <li>\n          <div>Discrimination</div>\n          <div className=\"is-emphasized\">{discrimination.string_value}</div>\n        </li>\n        <li>\n          <div>Gender Change</div>\n          <div className=\"is-emphasized\">{genderChangeRights.string_value}</div>\n        </li>\n        <li>\n          <div>Blood Donation</div>\n          <div className=\"is-emphasized\">{bloodDonation.string_value}</div>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Lgbt;","import React from 'react';\n\nconst People = ({ data, population, language }) => {\n  const elderlyPercent = data ? data.find(item => item.id === 'ELDERLY-PEOPLE') : '';\n  const lifeExpectancy = data ? data.find(item => item.id === 'LIFE-EXPECTANCY') : '';\n  const medianAge = data ? data.find(item => item.id === 'MEDIAN-AGE') : '';\n  const unemploymentRate = data ? data.find(item => item.id === 'UNEMPLOYMENT-RATE') : '';\n\n  const uaPopulation = population ? population.find(item => item.id === 'POPULATION-SIZE') : '';\n  const populationDensity = population ? population.find(item => item.id === 'POPULATION-UA-DENSITY') : '';\n\n  const spokenLanguage = language ? language.find(item => item.id === 'SPOKEN-LANGUAGES') : '';\n  const englishProficiency = language ? language.find(item => item.id === 'ENGLISH-SKILLS-DETAIL') : '';\n\n  return (\n    <div>\n      <h2 className=\"text-header\">People</h2>\n      <div className=\"people-list\">\n        <div>\n          <h4>{(uaPopulation.float_value * 1000000).toString()}</h4>\n          <p>Population</p>\n        </div>\n        <div>\n          <h4>{Math.round(populationDensity.float_value).toString()}</h4>\n          <div>\n            <p>Population Density</p>\n            <span className=\"text-caption\">People Per Square Kilometer</span>\n          </div>\n        </div>\n        <div>\n          <h4>{Math.round(elderlyPercent.percent_value * 10000).toString()}%</h4>\n          <p>Elderly People (65+)</p>\n        </div>\n        <div>\n          <h4>{lifeExpectancy.float_value} yrs</h4>\n          <p>Life Expectancy at Birth</p>\n        </div>\n        <div>\n          <h4>{medianAge.float_value}</h4>\n          <p>Median Age</p>\n        </div>\n        {/* <div>\n          <h4>{(unemploymentRate.percent_value * 10000).toString()}%</h4>\n          <div>Unemployment Rate</div>\n        </div> */}\n        <div>\n          <h4>{spokenLanguage.string_value}</h4>\n          <p>Spoken Language</p>\n        </div>\n        <div>\n          <h4>{englishProficiency.int_value}</h4>\n          <p>English Proficiency</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default People;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport LifeQuality from '../components/LifeQuality';\nimport Salaries from '../components/Salaries';\nimport Climate from '../components/Climate';\nimport CostOfLiving from '../components/CostOfLiving';\nimport JobMarket from '../components/JobMarket';\nimport Education from '../components/Education';\nimport Housing from '../components/Housing';\nimport Safety from '../components/Safety';\nimport Lgbt from '../components/Lgbt';\nimport People from '../components/People';\n\nclass CityPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cityId: this.props.match.params.cityId,\n      cityData: {},\n      uaSummary: '',\n      uaScores: [],\n      uaSalaries: [],\n      climate: {},\n      costOfLiving: {},\n      jobMarket: {},\n      education: {},\n      housing: {},\n      safety: {},\n      lgbt: {},\n      people: {},\n      uaPopulation: {},\n      language: {}\n    }\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n  \n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.cityId !== this.state.cityId) {\n      this.fetchData();\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.match.params.cityId !== prevState.cityId) {\n      const cityId = nextProps.match.params.cityId;\n      return {\n        cityId,\n        cityData: {}\n      }\n    }\n    return null;\n  }\n\n  fetchData() {\n    const { cityId } = this.state;\n\n    fetch(`https://api.teleport.org/api/cities/geonameid:${cityId}`)\n      .then(res => res.json())\n      .then(res => {\n        const urbanAreaUrl = res['_links']['city:urban_area']['href'];\n        this.setState({ cityData: res });\n        // console.log(res);\n        return Promise.all([\n          fetch(`${urbanAreaUrl}scores`),\n          fetch(`${urbanAreaUrl}salaries`),\n          fetch(`${urbanAreaUrl}details`)\n        ])\n      })\n      .then(res => Promise.all(res.map(r => r.json())))\n      .then(([scores, salaries, details]) => {\n        const detailData = details.categories;\n        console.log(detailData);\n\n        const climate = detailData.find(category => category.id === 'CLIMATE');\n        const costOfLiving = detailData.find(category => category.id === 'COST-OF-LIVING');\n        const jobMarket = detailData.find(category => category.id === 'JOB-MARKET');\n        const education = detailData.find(category => category.id === 'EDUCATION');\n        const housing = detailData.find(category => category.id === 'HOUSING');\n        const safety = detailData.find(category => category.id === 'SAFETY');\n        const lgbt = detailData.find(category => category.id === 'MINORITIES');\n        const people = detailData.find(category => category.id === 'INTERNAL');\n        const uaPopulation = detailData.find(category => category.id === 'CITY-SIZE');\n        const language = detailData.find(category => category.id === 'LANGUAGE');\n        // console.log(uaPopulation);\n\n        this.setState({\n          uaSummary: scores.summary,\n          uaScores: scores.categories,\n          uaSalaries: salaries.salaries,\n          uaDetails: details.categories,\n          climate,\n          costOfLiving,\n          jobMarket,\n          education,\n          housing,\n          safety,\n          lgbt,\n          people,\n          uaPopulation,\n          language\n        });\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"section\">\n          <CityInfo name={this.state.cityData.full_name} population={this.state.cityData.population} />\n        </div>\n        <div className=\"section\">\n          <LifeQuality summary={this.state.uaSummary} scores={this.state.uaScores} />\n        </div>\n        <div className=\"bg-black\">\n          <div className=\"section\">\n            <Climate label={this.state.climate.label} data={this.state.climate.data} />\n          </div>\n        </div>\n        <div className=\"section\">\n          <CostOfLiving label={this.state.costOfLiving.label} data={this.state.costOfLiving.data} />\n          <Housing label={this.state.housing.label} data={this.state.housing.data} />\n        </div>\n        <div className=\"bg-black\">\n          <div className=\"section\">\n            <JobMarket label={this.state.jobMarket.label} data={this.state.jobMarket.data} />\n          </div>\n        </div>\n        <div className=\"section\">\n          <Education label={this.state.education.label} data={this.state.education.data} />\n        </div>\n        <div className=\"bg-blue\">\n          <div className=\"section\">\n            <Safety label={this.state.safety.label} data={this.state.safety.data} />\n          </div>\n        </div>\n        <div className=\"section\">\n          <Lgbt data={this.state.lgbt.data} />\n        </div>\n        <div className=\"bg-orange\">\n          <div className=\"section\">\n            <People\n              data={this.state.people.data}\n              population={this.state.uaPopulation.data}\n              language={this.state.language.data}\n            />\n          </div>\n        </div>\n        <div className=\"section\">\n          <Salaries salaries={this.state.uaSalaries} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst CityInfo = ({ name, population }) => (\n  <div>\n    <p className=\"text-header\">{name}</p>\n    <p className=\"text-subheader\">Population: {population}</p>\n  </div>\n);\n\nexport default withRouter(CityPage);","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport * as ROUTES from './constants/routes';\n\nimport TopNavigation from './components/TopNavigation';\nimport AboutPage from './pages/AboutPage';\nimport HomePage from './pages/HomePage';\nimport CityPage from './pages/CityPage';\n\nconst App = () => (\n  <Router>\n    <TopNavigation />\n    <div className=\"app-container\">\n      <Route exact path={process.env.PUBLIC_URL + ROUTES.HOME} component={HomePage} />\n      <Route path={process.env.PUBLIC_URL + ROUTES.ABOUT} component={AboutPage} />\n      <Route path={process.env.PUBLIC_URL + `${ROUTES.CITY}/:cityId`} component={CityPage} />\n    </div>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n* DEPENDENCIES\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n/**\n* COMPONENTS\n*/\nimport App from './App';\n\n/**\n* CONSTANTS\n*/\nimport * as serviceWorker from './serviceWorker';\n\n/**\n* STYLES\n*/\nimport './scss/styles.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}